{"version":3,"sources":["functions.ts"],"names":[],"mappings":"AAAA,mBAAmB,MAAW;IAC5B,IAAI,QAAQ,GAAG,OAAO,MAAM,CAAC,QAAQ,KAAK,WAAW,GAAG,MAAM,CAAC,QAAQ,GAAG,EAAE,CAAC;IAC7E,IAAI,QAAQ,GAAG,OAAO,MAAM,CAAC,QAAQ,KAAK,WAAW,GAAG,MAAM,CAAC,QAAQ,GAAG,OAAO,CAAC;IAClF,IAAI,OAAO,GAAG,OAAO,MAAM,CAAC,OAAO,KAAK,WAAW,GAAG,MAAM,CAAC,OAAO,GAAG,EAAE,CAAC;IAC1E,IAAI,SAAS,GAAG,OAAO,MAAM,CAAC,SAAS,KAAK,WAAW,GAAG,MAAM,CAAC,SAAS,GAAG,GAAG,CAAC;IACjF,IAAI,QAAQ,GAAG,OAAO,MAAM,CAAC,QAAQ,KAAK,WAAW,GAAG,MAAM,CAAC,QAAQ,GAAG,GAAG,CAAC;IAC9E,IAAI,UAAU,GAAG,OAAO,MAAM,CAAC,UAAU,KAAK,WAAW,GAAG,MAAM,CAAC,UAAU,GAAG,GAAG,CAAC;IACpF,IAAI,UAAU,GAAG,OAAO,MAAM,CAAC,UAAU,KAAK,WAAW,GAAG,MAAM,CAAC,UAAU,GAAG,GAAG,CAAC;IACpF,IAAI,SAAS,GAAG,OAAO,MAAM,CAAC,SAAS,KAAK,WAAW,GAAG,MAAM,CAAC,SAAS,GAAG,GAAG,CAAC;IACjF,IAAI,SAAS,GAAG,OAAO,MAAM,CAAC,SAAS,KAAK,WAAW,GAAG,MAAM,CAAC,SAAS,GAAG,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC;IACjG,IAAI,QAAQ,GAAG,OAAO,MAAM,CAAC,QAAQ,KAAK,WAAW,GAAG,MAAM,CAAC,QAAQ,GAAG,YAAY,CAAC;IACvF,IAAI,QAAQ,GAAG,OAAO,MAAM,CAAC,QAAQ,KAAK,WAAW,GAAG,MAAM,CAAC,QAAQ,GAAG,kBAAkB,CAAC;IAC7F,IAAI,GAAG,GAAG,OAAO,MAAM,CAAC,GAAG,KAAK,WAAW,GAAG,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC;IAE/D,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,QAAQ,EAAE,CAAC;IACjC,qBAAqB;IACrB,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,GAAC,GAAG,CAAC;IACzB,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,GAAC,GAAG,CAAC;IACzB,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,GAAC,GAAG,CAAC;IACzB,MAAM,CAAA,CAAC,GAAG,CAAC,CAAC,CAAC;QACX,KAAK,GAAG;YACN,GAAG,CAAA,CAAC,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACnC,EAAE,CAAA,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC;oBACjC,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBACjC,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;oBACjB,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;oBACjB,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;oBACjB,CAAC,CAAC,YAAY,EAAE,CAAC;oBACjB,KAAK,CAAC,KAAK,CAAmB,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,MAAM,CAAE,CAAC;gBACvD,CAAC;gBACD,CAAC,IAAI,SAAS,CAAC;gBACf,EAAE,CAAA,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;oBACnC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,GAAC,GAAG,CAAC;oBACrB,CAAC,IAAI,SAAS,CAAC;gBACjB,CAAC;gBACD,IAAI,CAAC,EAAE,CAAA,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;oBACxC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,GAAC,GAAG,CAAC;oBACrB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,GAAC,GAAG,CAAC;oBACrB,CAAC,IAAI,SAAS,CAAC;gBACjB,CAAC;YACH,CAAC;YACD,IAAI,IAAI,GAAI,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,GAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YACzF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,MAAM,CAAC,IAAI,CAAC;QAEd,KAAK,GAAG;YACN,GAAG,CAAA,CAAC,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACnC,EAAE,CAAA,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC;oBACjC,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBACjC,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;oBACjB,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;oBACjB,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;oBACjB,CAAC,CAAC,YAAY,EAAE,CAAC;oBACjB,KAAK,CAAC,KAAK,CAAmB,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,MAAM,CAAE,CAAC;gBACvD,CAAC;gBACD,CAAC,IAAI,SAAS,CAAC;gBACf,EAAE,CAAA,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;oBACnC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,GAAC,GAAG,CAAC;oBACrB,CAAC,IAAI,SAAS,CAAC;gBACjB,CAAC;gBACD,IAAI,CAAC,EAAE,CAAA,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;oBACxC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,GAAC,GAAG,CAAC;oBACrB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,GAAC,GAAG,CAAC;oBACrB,CAAC,IAAI,SAAS,CAAC;gBACjB,CAAC;YACH,CAAC;YACD,IAAI,IAAI,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,GAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YACxF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAED,IAAI,IAAI,GAAI,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,GAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IACzF,MAAM,CAAC,IAAI,CAAC;AACd,CAAC;AAED,kBAAkB,MAAW;IAC3B,IAAI,KAAK,GAAG,OAAO,MAAM,CAAC,KAAK,KAAK,WAAW,GAAG,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC;IACpE,IAAI,MAAM,GAAG,OAAO,MAAM,CAAC,MAAM,KAAK,WAAW,GAAG,MAAM,CAAC,MAAM,GAAG,EAAE,CAAC;IACvE,IAAI,IAAI,GAAG,OAAO,MAAM,CAAC,IAAI,KAAK,WAAW,GAAG,MAAM,CAAC,IAAI,GAAG,iBAAiB,CAAC;IAChF,IAAI,KAAK,GAAG,OAAO,MAAM,CAAC,KAAK,KAAK,WAAW,GAAG,MAAM,CAAC,KAAK,GAAG,QAAQ,CAAC;IAC1E,IAAI,KAAK,GAAG,OAAO,MAAM,CAAC,KAAK,KAAK,WAAW,GAAG,MAAM,CAAC,KAAK,GAAG,iBAAiB,CAAC;IACnF,IAAI,IAAI,GAAG,OAAO,MAAM,CAAC,IAAI,KAAK,WAAW,GAAG,MAAM,CAAC,IAAI,GAAG,EAAE,CAAC;IACjE,IAAI,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IAC9C,IAAI,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAEtC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;IACpB,OAAO,CAAC,SAAS,GAAG,KAAK,CAAC;IAC1B,OAAO,CAAC,SAAS,GAAG,KAAK,CAAC;IAC1B,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,KAAK,GAAC,CAAC,EAAE,MAAM,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC;IAExD,IAAI,OAAO,GAAG,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;IACvC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC;IAE3B,IAAI,IAAI,GAAG,IAAI,KAAK,CAAC,IAAI,CACvB,IAAI,KAAK,CAAC,mBAAmB,CAAC,KAAK,EAAE,MAAM,CAAC,EAC5C,IAAI,KAAK,CAAC,iBAAiB,CAAE,EAAE,GAAG,EAAE,OAAO,EAAE,WAAW,EAAC,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,CAAE,CACvG,CAAC;IAEF,MAAM,CAAC,IAAI,CAAC;AACd,CAAC;AAED,uBAAuB,CAAC;IACtB,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,GAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC;AAAA,CAAC;AAEF;;6BAE6B;AAE7B;;IAEI;AACJ,IAAI,WAAW,GAAG,IAAI,KAAK,CAAC,mBAAmB,CAAC;IAC9C,GAAG,EAAE,KAAK,CAAC,UAAU,CAAC,WAAW,CAAC,2BAA2B,CAAC;CAC/D,CAAC,CAAC;AACH,IAAI,YAAY,GAAG;IACjB,IAAI,KAAK,CAAC,iBAAiB,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC;CACrF,CAAC;AAEF,IAAI,WAAW,GAAG,IAAI,KAAK,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACjD,IAAI,kBAAkB,GAAG,IAAI,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AAC9D,IAAI,gBAAgB,GAAG,IAAI,KAAK,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AAE/D;;IAEI;AACJ,IAAI,aAAa,GAAG,IAAI,KAAK,CAAC,mBAAmB,CAAC;IAChD,GAAG,EAAE,KAAK,CAAC,UAAU,CAAC,WAAW,CAAC,6BAA6B,CAAC;CACjE,CAAC,CAAC;AACH,IAAI,eAAe,GAAG;IACpB,IAAI,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IACpC,IAAI,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IACpC,IAAI,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IACpC,IAAI,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IACpC,IAAI,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IACpC,IAAI,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;CACrC,CAAC;AACF,IAAI,cAAc,GAAG;IACnB,IAAI,KAAK,CAAC,iBAAiB,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC;IACpF,IAAI,KAAK,CAAC,iBAAiB,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC;IACpF,IAAI,KAAK,CAAC,iBAAiB,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC;IACpF,IAAI,KAAK,CAAC,iBAAiB,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC;CACrF,CAAC;AAEF,IAAI,SAAS,GAAG;IACd,KAAK,EAAE,EAAE;CACV,CAAC;AACF,eAAe,CAAC,OAAO,CAAC,UAAS,QAAQ;IACvC,cAAc,CAAC,OAAO,CAAC,UAAS,QAAQ;QACtC,IAAI,IAAI,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAC9C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH;;IAEI;AAEJ,IAAI,aAAa,GAAG,IAAI,KAAK,CAAC,UAAU,CAAE,QAAQ,EAAE,GAAG,EAAG,EAAE,CAAE,CAAC;AAC/D,IAAI,aAAa,GAAG,IAAI,KAAK,CAAC,UAAU,CAAE,QAAQ,EAAE,GAAG,EAAG,EAAE,CAAE,CAAC;AAC/D,IAAI,aAAa,GAAG,IAAI,KAAK,CAAC,UAAU,CAAE,QAAQ,EAAE,GAAG,EAAG,EAAE,CAAE,CAAC;AAC/D,IAAI,aAAa,GAAG,IAAI,KAAK,CAAC,UAAU,CAAE,QAAQ,EAAE,GAAG,EAAG,EAAE,CAAE,CAAC;AAE/D;;IAEI;AACJ,IAAI,aAAa,GAAG,IAAI,KAAK,CAAC,mBAAmB,CAAC;IAChD,GAAG,EAAE,KAAK,CAAC,UAAU,CAAC,WAAW,CAAC,+BAA+B,CAAC;CACnE,CAAC,CAAC;AACH,IAAI,oBAAoB,GAAG;IACzB,IAAI,KAAK,CAAC,iBAAiB,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC;IACpF,IAAI,KAAK,CAAC,iBAAiB,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC;IACpF,IAAI,KAAK,CAAC,iBAAiB,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC;IACpF,IAAI,KAAK,CAAC,iBAAiB,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC;CACrF,CAAC;AACF,IAAI,oBAAoB,GAAG;IACzB,IAAI,KAAK,CAAC,iBAAiB,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC;IACpF,IAAI,KAAK,CAAC,iBAAiB,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC;IACpF,IAAI,KAAK,CAAC,iBAAiB,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC;IACpF,IAAI,KAAK,CAAC,iBAAiB,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC;CACrF,CAAC;AACF,IAAI,oBAAoB,GAAG;IACzB,IAAI,KAAK,CAAC,iBAAiB,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC;IACpF,IAAI,KAAK,CAAC,iBAAiB,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC;IACpF,IAAI,KAAK,CAAC,iBAAiB,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC;IACpF,IAAI,KAAK,CAAC,iBAAiB,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC;CACrF,CAAC;AAEF,IAAI,oBAAoB,GAAG;IACzB,IAAI,KAAK,CAAC,mBAAmB,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC;IAClD,IAAI,KAAK,CAAC,mBAAmB,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC;IAClD,IAAI,KAAK,CAAC,mBAAmB,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC;IAClD,IAAI,KAAK,CAAC,mBAAmB,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC;CACnD,CAAC;AACF,IAAI,aAAa,GAAG,IAAI,KAAK,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAEnD,IAAI,SAAS,GAAG;IACd,IAAI,EAAE;QACJ,EAAE,MAAM,EAAC,EAAE,EAAE,MAAM,EAAC,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE;QACzC,EAAE,MAAM,EAAC,EAAE,EAAE,MAAM,EAAC,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE;QACzC,EAAE,MAAM,EAAC,EAAE,EAAE,MAAM,EAAC,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE;QACzC,EAAE,MAAM,EAAC,EAAE,EAAE,MAAM,EAAC,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE;KAC1C;CACF,CAAC;AAEF,eAAe;AACf,oBAAoB,CAAC,OAAO,CAAC,UAAS,QAAQ;IAC5C,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QACtC,OAAO,EAAG,iTAAiT;QAC3T,SAAS,EAAG,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC;QAC7B,QAAQ,EAAG,CAAC,QAAQ,CAAC;QACrB,GAAG,EAAE,GAAG;KACT,CAAC,CAAC,CAAC;IACJ,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QACtC,OAAO,EAAG,ySAAyS;QACnT,SAAS,EAAG,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC;QAC7B,QAAQ,EAAG,CAAC,QAAQ,CAAC;QACrB,GAAG,EAAE,GAAG;KACT,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC;AACH,oBAAoB,CAAC,OAAO,CAAC,UAAS,QAAQ;IAC5C,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QACtC,OAAO,EAAG,6XAA6X;QACvY,SAAS,EAAG,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC;QAC7B,QAAQ,EAAG,CAAC,QAAQ,CAAC;QACrB,GAAG,EAAE,GAAG;KACT,CAAC,CAAC,CAAC;IACJ,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QACtC,OAAO,EAAG,gXAAgX;QAC1X,SAAS,EAAG,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC;QAC7B,QAAQ,EAAG,CAAC,QAAQ,CAAC;QACrB,GAAG,EAAE,GAAG;KACT,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC;AACH,oBAAoB,CAAC,OAAO,CAAC,UAAS,QAAQ;IAC5C,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QACtC,OAAO,EAAG,iWAAiW;QAC3W,SAAS,EAAG,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC;QAC7B,QAAQ,EAAG,CAAC,QAAQ,CAAC;QACrB,GAAG,EAAE,GAAG;KACT,CAAC,CAAC,CAAC;IACJ,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QACtC,OAAO,EAAG,qWAAqW;QAC/W,SAAS,EAAG,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC;QAC7B,QAAQ,EAAG,CAAC,QAAQ,CAAC;QACrB,GAAG,EAAE,GAAG;KACT,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC;AACH,oBAAoB,CAAC,OAAO,CAAC,UAAS,QAAQ;IAC5C,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QACtC,OAAO,EAAG,sTAAsT;QAChU,SAAS,EAAG,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC;QAC7B,QAAQ,EAAG,CAAC,QAAQ,CAAC;QACrB,GAAG,EAAE,GAAG;KACT,CAAC,CAAC,CAAC;IACJ,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QACtC,OAAO,EAAG,sTAAsT;QAChU,SAAS,EAAG,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC;QAC7B,QAAQ,EAAG,CAAC,QAAQ,CAAC;QACrB,GAAG,EAAE,GAAG;KACT,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC;AAEH,gBAAgB;AAChB,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,SAAS,CAAC;IACtC,OAAO,EAAG,iTAAiT;IAC3T,SAAS,EAAG,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC;IAC7B,QAAQ,EAAG,CAAC,IAAI,KAAK,CAAC,iBAAiB,CAAC;YACtC,KAAK,EAAC,QAAQ;YACd,IAAI,EAAC,KAAK,CAAC,UAAU;SACtB,CAAC,CAAC;IACH,GAAG,EAAE,GAAG;CACT,CAAC,CAAC;AACH,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,SAAS,CAAC;IACtC,OAAO,EAAG,6XAA6X;IACvY,SAAS,EAAG,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC;IAC7B,QAAQ,EAAG,CAAC,IAAI,KAAK,CAAC,iBAAiB,CAAC;YACtC,KAAK,EAAC,QAAQ;YACd,IAAI,EAAC,KAAK,CAAC,UAAU;SACtB,CAAC,CAAC;IACH,GAAG,EAAE,GAAG;CACT,CAAC,CAAC;AACH,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,SAAS,CAAC;IACtC,OAAO,EAAG,iWAAiW;IAC3W,SAAS,EAAG,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC;IAC7B,QAAQ,EAAG,CAAC,IAAI,KAAK,CAAC,iBAAiB,CAAC;YACtC,KAAK,EAAC,QAAQ;YACd,IAAI,EAAC,KAAK,CAAC,UAAU;SACtB,CAAC,CAAC;IACH,GAAG,EAAE,GAAG;CACT,CAAC,CAAC;AACH,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,SAAS,CAAC;IACtC,OAAO,EAAG,sTAAsT;IAChU,SAAS,EAAG,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,GAAG,EAAC;IAC7B,QAAQ,EAAG,CAAC,IAAI,KAAK,CAAC,iBAAiB,CAAC;YACtC,KAAK,EAAC,QAAQ;YACd,IAAI,EAAC,KAAK,CAAC,UAAU;SACtB,CAAC,CAAC;IACH,GAAG,EAAE,GAAG;CACT,CAAC,CAAC;AAEH;;IAEI;AACJ,IAAI,kBAAkB,GAAG,IAAI,KAAK,CAAC,mBAAmB,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;AAC5E,IAAI,oBAAoB,GAAG,IAAI,KAAK,CAAC,mBAAmB,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;AAC9E,IAAI,kBAAkB,GAAG,IAAI,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AAC9D,IAAI,qBAAqB,GAAG,IAAI,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AAEjE,IAAI,WAAW,GAAG;IAChB,IAAI,EAAE;QACJ,EAAE,KAAK,EAAG,IAAI,KAAK,CAAC,IAAI,CAAC,kBAAkB,EAAE,oBAAoB,CAAC,EAAE;QACpE,EAAE,KAAK,EAAG,IAAI,KAAK,CAAC,IAAI,CAAC,kBAAkB,EAAE,kBAAkB,CAAC,EAAE;QAClE,EAAE,KAAK,EAAG,IAAI,KAAK,CAAC,IAAI,CAAC,qBAAqB,EAAE,kBAAkB,CAAC,EAAE;KACtE;CACF,CAAC;AAEF;;IAEI;AACJ,IAAI,aAAa,GAAG,KAAK,CAAC,UAAU,CAAC,WAAW,CAAC,2BAA2B,CAAC,CAAC;AAC9E,aAAa,CAAC,KAAK,GAAG,KAAK,CAAC,cAAc,CAAC;AAC3C,aAAa,CAAC,KAAK,GAAG,KAAK,CAAC,cAAc,CAAC;AAC3C,aAAa,CAAC,MAAM,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;AACjC,IAAI,cAAc,GAAG,IAAI,KAAK,CAAC,iBAAiB,CAAC;IAC/C,GAAG,EAAE,aAAa;IAClB,IAAI,EAAE,KAAK,CAAC,UAAU;IACtB,QAAQ,EAAE,QAAQ;IAClB,SAAS,EAAE,GAAG;CACf,CAAC,CAAC;AAEH,IAAI,aAAa,GAAG,IAAI,KAAK,CAAC,mBAAmB,CAAC;IAChD,GAAG,EAAE,KAAK,CAAC,UAAU,CAAC,WAAW,CAAC,6BAA6B,CAAC;CACjE,CAAC,CAAC;AACH,IAAI,SAAS,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,cAAc,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAAE,aAAa,CAAC,CAAC;AAElF,IAAI,iBAAiB,GAAG,IAAI,KAAK,CAAC,mBAAmB,CAAC;IACpD,GAAG,EAAE,KAAK,CAAC,UAAU,CAAC,WAAW,CAAC,iCAAiC,CAAC;CACrE,CAAC,CAAC;AACH,IAAI,aAAa,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,cAAc,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,EAAE,iBAAiB,CAAC,CAAC;AAE1F,IAAI,SAAS,GAAG;IACd,KAAK,EAAC,IAAI;CACX,CAAC;AACF,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC;IAC1B,OAAO,EAAG,2KAA2K;IACrL,SAAS,EAAG,EAAC,CAAC,EAAC,IAAI,EAAC,CAAC,EAAC,IAAI,EAAC,CAAC,EAAC,IAAI,EAAC;IAClC,QAAQ,EAAG,CAAC,IAAI,KAAK,CAAC,iBAAiB,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC;IACjG,QAAQ,EAAG,gBAAgB;IAC3B,SAAS,EAAG,IAAI;IAChB,GAAG,EAAE,GAAG;CACT,CAAC,CAAC;AAEH;;IAEI;AAEJ,IAAI,SAAS,GAAG;IACd,IAAI,EAAE;QACJ,EAAE,KAAK,EAAC,IAAI,EAAE;QACd,EAAE,KAAK,EAAC,IAAI,EAAE;KACf;CACF,CAAC;AACF,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,SAAS,CAAC;IAClC,OAAO,EAAG,oVAAoV;IAC9V,SAAS,EAAG,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,GAAG,EAAC;IAC/B,QAAQ,EAAG,CAAC,IAAI,KAAK,CAAC,iBAAiB,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC;IACjG,GAAG,EAAE,GAAG;CACT,CAAC,CAAC;AACH,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,SAAS,CAAC;IAClC,OAAO,EAAG,oVAAoV;IAC9V,SAAS,EAAG,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,GAAG,EAAC;IAC/B,QAAQ,EAAG,CAAC,IAAI,KAAK,CAAC,iBAAiB,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC;IACjG,GAAG,EAAE,GAAG;CACT,CAAC,CAAC;AAEH;;IAEI;AAEJ,IAAI,QAAQ,GAAG,EAAE,CAAC;AAClB,IAAI,SAAS,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE,SAAS,CAAC,CAAC;AACzE,SAAS,CAAC,OAAO,CAAC,UAAS,IAAI;IAC7B,QAAQ,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC;QACxB,IAAI,EAAC,IAAI;QACT,KAAK,EAAC,qBAAqB;QAC3B,IAAI,EAAC,iBAAiB;QACtB,KAAK,EAAE,CAAC;QACR,MAAM,EAAE,CAAC;KACV,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,WAAW;AACX,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IACb,IAAI,CAAC,GAAG,GAAG,cAAa,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAA;AACxD,CAAC","file":"functions.js","sourcesContent":["function loadModel(params: any) : THREE.Mesh {\n  var filePath = typeof params.filePath !== 'undefined' ? params.filePath : '';\n  var encoding = typeof params.encoding !== 'undefined' ? params.encoding : 'UTF-8';\n  var content = typeof params.content !== 'undefined' ? params.content : '';\n  var charEmpty = typeof params.charEmpty !== 'undefined' ? params.charEmpty : ' ';\n  var charFull = typeof params.charFull !== 'undefined' ? params.charFull : '*';\n  var separatorY = typeof params.separatorY !== 'undefined' ? params.separatorY : ',';\n  var separatorZ = typeof params.separatorZ !== 'undefined' ? params.separatorZ : '/';\n  var blockSize = typeof params.blockSize !== 'undefined' ? params.blockSize : 0.1;\n  var modelSize = typeof params.modelSize !== 'undefined' ? params.modelSize : {x:1.2,y:1.2,z:0.2};\n  var material = typeof params.material !== 'undefined' ? params.material : padMaterials;\n  var geometry = typeof params.geometry !== 'undefined' ? params.geometry : modelBlockGeometry;\n  var axe = typeof params.axe !== 'undefined' ? params.axe : 'z';\n  \n  var group = new THREE.Geometry();\n  //var materials = [];\n  var x = -modelSize.x/2.0;\n  var y = -modelSize.y/2.0;\n  var z = -modelSize.z/2.0;\n  switch(axe) {\n    case 'y':\n      for(let i=0; i<content.length; i++) {\n        if(content.charAt(i) == charFull) {\n          var m = new THREE.Mesh(geometry);\n          m.position.x = x;\n          m.position.y = y;\n          m.position.z = z;\n          m.updateMatrix();\n          group.merge( <THREE.Geometry> m.geometry, m.matrix );\n        }\n        x += blockSize;\n        if(content.charAt(i) == separatorY) {\n          x = -modelSize.x/2.0;\n          z += blockSize;\n        }\n        else if(content.charAt(i) == separatorZ) {\n          x = -modelSize.x/2.0;\n          z = -modelSize.z/2.0;\n          y += blockSize;\n        }\n      }\n      var mesh =  new THREE.Mesh(group, material[Math.floor((Math.random()*material.length))]);\n      mesh.castShadow = true;\n      return mesh;\n      \n    case 'z':\n      for(let i=0; i<content.length; i++) {\n        if(content.charAt(i) == charFull) {\n          var m = new THREE.Mesh(geometry);\n          m.position.x = x;\n          m.position.y = y;\n          m.position.z = z;\n          m.updateMatrix();\n          group.merge( <THREE.Geometry> m.geometry, m.matrix );\n        }\n        x += blockSize;\n        if(content.charAt(i) == separatorY) {\n          x = -modelSize.x/2.0;\n          y += blockSize;\n        }\n        else if(content.charAt(i) == separatorZ) {\n          x = -modelSize.x/2.0;\n          y = -modelSize.y/2.0;\n          z += blockSize;\n        }\n      }\n      var mesh = new THREE.Mesh(group, material[Math.floor((Math.random()*material.length))]);\n      mesh.castShadow = true;\n      return mesh;\n  }\n  \n  var mesh =  new THREE.Mesh(group, material[Math.floor((Math.random()*material.length))]);\n  return mesh;\n}\n\nfunction textMesh(params: any) : THREE.Mesh {\n  var width = typeof params.width !== 'undefined' ? params.width : 10;\n  var height = typeof params.height !== 'undefined' ? params.height : 10;\n  var font = typeof params.font !== 'undefined' ? params.font : \"Bold 20px Arial\";\n  var align = typeof params.align !== 'undefined' ? params.align : 'center';\n  var color = typeof params.color !== 'undefined' ? params.color : 'rgba(255,0,0,1)';\n  var text = typeof params.text !== 'undefined' ? params.text : \"\";\n  var canvas = document.createElement('canvas');\n  var context = canvas.getContext('2d');\n  \n  context.font = font;\n  context.fillStyle = color;\n  context.textAlign = align;\n  context.fillText(text, canvas.width/2, canvas.height/2);\n\n  var texture = new THREE.Texture(canvas) \n  texture.needsUpdate = true;\n\n  var mesh = new THREE.Mesh(\n    new THREE.PlaneBufferGeometry(width, height),\n    new THREE.MeshBasicMaterial( { map: texture, transparent:true, depthWrite: false, depthTest: false } )\n  );\n  \n  return mesh;\n}\n\nfunction randFromArray(a) : any {\n  return a[Math.floor((Math.random()*a.length))];\n};\n\n/**************************\n * CONSTANTS\n ***************************/\n\n/**\n * PAD\n **/\nvar padMaterial = new THREE.MeshLambertMaterial({\n  map: THREE.ImageUtils.loadTexture('src/medias/images/pad.png')\n});\nvar padMaterials = [\n  new THREE.MeshPhongMaterial({ color: 0x333333, specular: 0xffffff, shininess: 500 }),\n];\n\nvar padGeometry = new THREE.BoxGeometry(1, 1, 1);\nvar modelBlockGeometry = new THREE.BoxGeometry(0.1, 0.1, 0.1);\nvar padBlockGeometry = new THREE.BoxGeometry(0.05, 0.05, 0.05);\n\n/**\n * BUNKER\n **/\nvar blockMaterial = new THREE.MeshLambertMaterial({\n  map: THREE.ImageUtils.loadTexture('src/medias/images/block.jpg')\n});\nvar blockGeometries = [\n  new THREE.BoxGeometry(0.6, 0.6, 0.5),\n  new THREE.BoxGeometry(0.6, 0.6, 0.6),\n  new THREE.BoxGeometry(0.6, 0.6, 0.7),\n  new THREE.BoxGeometry(0.6, 0.6, 0.8),\n  new THREE.BoxGeometry(0.6, 0.6, 0.9),\n  new THREE.BoxGeometry(0.6, 0.6, 1.0),\n];\nvar blockMaterials = [\n  new THREE.MeshPhongMaterial({ color: 0xff6400, specular: 0xffffff, shininess: 200 }),\n  new THREE.MeshPhongMaterial({ color: 0xff8b40, specular: 0xffffff, shininess: 200 }),\n  new THREE.MeshPhongMaterial({ color: 0xffaa73, specular: 0xffffff, shininess: 200 }),\n  new THREE.MeshPhongMaterial({ color: 0xa64100, specular: 0xffffff, shininess: 200 }),\n];\n\nvar blockData = {\n  model: [],\n};\nblockGeometries.forEach(function(geometry){\n  blockMaterials.forEach(function(material){\n    var mesh = new THREE.Mesh(geometry, material);\n    mesh.castShadow = true;\n    blockData.model.push(mesh);\n  });\n});\n\n/**\n * LIGHTS\n **/\n\nvar missileLight1 = new THREE.PointLight( 0xffffff, 1.0 , 10 );\nvar missileLight2 = new THREE.PointLight( 0xffffff, 1.0 , 10 );\nvar missileLight3 = new THREE.PointLight( 0xffffff, 1.0 , 10 );\nvar missileLight4 = new THREE.PointLight( 0xffffff, 1.0 , 10 );\n\n/**\n * ALIEN\n **/\nvar alienMaterial = new THREE.MeshLambertMaterial({\n  map: THREE.ImageUtils.loadTexture('src/medias/images/water_0.jpg')\n});\nvar aliensMaterialsType1 = [\n  new THREE.MeshPhongMaterial({ color: 0x87b073, specular: 0xffffff, shininess: 200 }),\n  new THREE.MeshPhongMaterial({ color: 0x85b66c, specular: 0xffffff, shininess: 200 }),\n  new THREE.MeshPhongMaterial({ color: 0x689d4e, specular: 0xffffff, shininess: 200 }),\n  new THREE.MeshPhongMaterial({ color: 0x658954, specular: 0xffffff, shininess: 200 }),\n];\nvar aliensMaterialsType2 = [\n  new THREE.MeshPhongMaterial({ color: 0x547289, specular: 0xffffff, shininess: 200 }),\n  new THREE.MeshPhongMaterial({ color: 0x5789b0, specular: 0xffffff, shininess: 200 }),\n  new THREE.MeshPhongMaterial({ color: 0x3d6686, specular: 0xffffff, shininess: 200 }),\n  new THREE.MeshPhongMaterial({ color: 0x7093ae, specular: 0xffffff, shininess: 200 }),\n];\nvar aliensMaterialsType3 = [\n  new THREE.MeshPhongMaterial({ color: 0x9d70ae, specular: 0xffffff, shininess: 200 }),\n  new THREE.MeshPhongMaterial({ color: 0xc096d0, specular: 0xffffff, shininess: 200 }),\n  new THREE.MeshPhongMaterial({ color: 0xaf72c5, specular: 0xffffff, shininess: 200 }),\n  new THREE.MeshPhongMaterial({ color: 0xb08bbd, specular: 0xffffff, shininess: 200 }),\n];\n\nvar aliensMaterialsBonus = [\n  new THREE.MeshLambertMaterial({ color: 0xb83535 }),\n  new THREE.MeshLambertMaterial({ color: 0xdb4f4f }),\n  new THREE.MeshLambertMaterial({ color: 0xb12727 }),\n  new THREE.MeshLambertMaterial({ color: 0xdd1919 }),\n];\nvar alienGeometry = new THREE.BoxGeometry(1, 1, 1);\n\nvar alienData = {\n  type: [\n    { model1:[], model2:[], modelMenu: null },\n    { model1:[], model2:[], modelMenu: null },\n    { model1:[], model2:[], modelMenu: null },\n    { model1:[], model2:[], modelMenu: null },\n  ]\n};\n\n// mesh in game\naliensMaterialsType1.forEach(function(material){\n  alienData.type[0].model1.push(loadModel({\n    content : '*        * , *      *,  * ** * , ********, ** ** **,  ******,   ****,    **/*        * , *      *,  * ** * , ********, ** ** **,  ******,   ****,    **/*        * , *      *,  * ** * , ********, ** ** **,  ******,   ****,    **/*        * , *      *,  * ** * , ********, ** ** **,  ******,   ****,    **',\n    modelSize : {x:0.8,y:2,z:0.4},\n    material : [material],\n    axe: 'y',\n  }));\n  alienData.type[0].model2.push(loadModel({\n    content : '  *    * , *      *,  * ** * , ********, ** ** **,  ******,   ****,    **/  *    * , *      *,  * ** * , ********, ** ** **,  ******,   ****,    **/  *    * , *      *,  * ** * , ********, ** ** **,  ******,   ****,    **/  *    * , *      *,  * ** * , ********, ** ** **,  ******,   ****,    **',\n    modelSize : {x:0.8,y:2,z:0.4},\n    material : [material],\n    axe: 'y',\n  }));\n});\naliensMaterialsType2.forEach(function(material){\n  alienData.type[1].model1.push(loadModel({\n    content : '**        **,  ** ** **,   **  **,************,***  **  ***,************, **********,    ****,/**        **,  ** ** **,   **  **,************,***  **  ***,************, **********,    ****,/**        **,  ** ** **,   **  **,************,***  **  ***,************, **********,    ****,/**        **,  ** ** **,   **  **,************,***  **  ***,************, **********,    ****,',\n    modelSize : {x:0.8,y:2,z:0.4},\n    material : [material],\n    axe: 'y',\n  }));\n  alienData.type[1].model2.push(loadModel({\n    content : '   **  **,  ** ** **,   **  **,************,***  **  ***,************, **********,    ****,/   **  **,  ** ** **,   **  **,************,***  **  ***,************, **********,    ****,/   **  **,  ** ** **,   **  **,************,***  **  ***,************, **********,    ****/   **  **,  ** ** **,   **  **,************,***  **  ***,************, **********,    ****,',\n    modelSize : {x:0.8,y:2,z:0.4},\n    material : [material],\n    axe: 'y',\n  }));\n});\naliensMaterialsType3.forEach(function(material){\n  alienData.type[2].model1.push(loadModel({\n    content : '   ** **   ,* *     * *,* ******* *,***********, ** *** **,  *******,   *   *,  *     */   ** **   ,* *     * *,* ******* *,***********, ** *** **,  *******,   *   *,  *     */   ** **   ,* *     * *,* ******* *,***********, ** *** **,  *******,   *   *,  *     */   ** **   ,* *     * *,* ******* *,***********, ** *** **,  *******,   *   *,  *     *',\n    modelSize : {x:0.8,y:2,z:0.4},\n    material : [material],\n    axe: 'y',\n  }));\n  alienData.type[2].model2.push(loadModel({\n    content : ' **     **,  *     *,  *******,***********,*** *** ***,* ******* *,*  *   *  *,  *     */ **     **,  *     *,  *******,***********,*** *** ***,* ******* *,*  *   *  *,  *     */ **     **,  *     *,  *******,***********,*** *** ***,* ******* *,*  *   *  *,  *     */ **     **,  *     *,  *******,***********,*** *** ***,* ******* *,*  *   *  *,  *     *',\n    modelSize : {x:0.8,y:2,z:0.4},\n    material : [material],\n    axe: 'y',\n  }));\n});\naliensMaterialsBonus.forEach(function(material){\n  alienData.type[3].model1.push(loadModel({\n    content : '   *        *,  ***  **  ***,****************, ** ** ** ** **,  ************,   **********,     ******/   *        *,  ***  **  ***,****************, ** ** ** ** **,  ************,   **********,     ******/   *        *,  ***  **  ***,****************, ** ** ** ** **,  ************,   **********,     ******',\n    modelSize : {x:0.8,y:2,z:0.4},\n    material : [material],\n    axe: 'y',\n  }));\n  alienData.type[3].model2.push(loadModel({\n    content : '   *        *,  ***  **  ***,****************, ** ** ** ** **,  ************,   **********,     ******/   *        *,  ***  **  ***,****************, ** ** ** ** **,  ************,   **********,     ******/   *        *,  ***  **  ***,****************, ** ** ** ** **,  ************,   **********,     ******',\n    modelSize : {x:0.8,y:2,z:0.4},\n    material : [material],\n    axe: 'y',\n  }));\n});\n\n// mesh for menu\nalienData.type[0].modelMenu = loadModel({\n  content : '*        * , *      *,  * ** * , ********, ** ** **,  ******,   ****,    **/*        * , *      *,  * ** * , ********, ** ** **,  ******,   ****,    **/*        * , *      *,  * ** * , ********, ** ** **,  ******,   ****,    **/*        * , *      *,  * ** * , ********, ** ** **,  ******,   ****,    **',\n  modelSize : {x:0.8,y:2,z:0.4},\n  material : [new THREE.MeshBasicMaterial({\n    color:0x87b073,\n    side:THREE.DoubleSide\n  })],\n  axe: 'y',\n});\nalienData.type[1].modelMenu = loadModel({\n  content : '**        **,  ** ** **,   **  **,************,***  **  ***,************, **********,    ****,/**        **,  ** ** **,   **  **,************,***  **  ***,************, **********,    ****,/**        **,  ** ** **,   **  **,************,***  **  ***,************, **********,    ****,/**        **,  ** ** **,   **  **,************,***  **  ***,************, **********,    ****,',\n  modelSize : {x:0.8,y:2,z:0.4},\n  material : [new THREE.MeshBasicMaterial({\n    color:0x547289,\n    side:THREE.DoubleSide\n  })],\n  axe: 'y',\n});\nalienData.type[2].modelMenu = loadModel({\n  content : '   ** **   ,* *     * *,* ******* *,***********, ** *** **,  *******,   *   *,  *     */   ** **   ,* *     * *,* ******* *,***********, ** *** **,  *******,   *   *,  *     */   ** **   ,* *     * *,* ******* *,***********, ** *** **,  *******,   *   *,  *     */   ** **   ,* *     * *,* ******* *,***********, ** *** **,  *******,   *   *,  *     *',\n  modelSize : {x:0.8,y:2,z:0.4},\n  material : [new THREE.MeshBasicMaterial({\n    color:0x9d70ae,\n    side:THREE.DoubleSide\n  })],\n  axe: 'y',\n});\nalienData.type[3].modelMenu = loadModel({\n  content : '   *        *,  ***  **  ***,****************, ** ** ** ** **,  ************,   **********,     ******/   *        *,  ***  **  ***,****************, ** ** ** ** **,  ************,   **********,     ******/   *        *,  ***  **  ***,****************, ** ** ** ** **,  ************,   **********,     ******',\n  modelSize : {x:0.8,y:2,z:0.4},\n  material : [new THREE.MeshBasicMaterial({\n    color:0xb83535,\n    side:THREE.DoubleSide\n  })],\n  axe: 'y',\n});\n\n/**\n * MISSILE\n **/\nvar padMissileMaterial = new THREE.MeshLambertMaterial({ color: 0x00ff00 });\nvar alienMissileMaterial = new THREE.MeshLambertMaterial({ color: 0xff0000 });\nvar padMissileGeometry = new THREE.BoxGeometry(0.1, 0.3, 0.1);\nvar padBigMissileGeometry = new THREE.BoxGeometry(0.3, 0.3, 0.3);\n\nvar missileData = {\n  type: [\n    { model : new THREE.Mesh(padMissileGeometry, alienMissileMaterial) },\n    { model : new THREE.Mesh(padMissileGeometry, padMissileMaterial) },\n    { model : new THREE.Mesh(padBigMissileGeometry, padMissileMaterial) },\n  ]\n};\n\n/**\n * WORLD\n **/\nvar groundTexture = THREE.ImageUtils.loadTexture('src/medias/images/pad.jpg');\ngroundTexture.wrapS = THREE.RepeatWrapping;\ngroundTexture.wrapT = THREE.RepeatWrapping;\ngroundTexture.repeat.set( 4, 4 );\nvar groundMaterial = new THREE.MeshPhongMaterial({\n  map: groundTexture,\n  side: THREE.DoubleSide, \n  specular: 0xffffff, \n  shininess: 200\n});\n\nvar earthMaterial = new THREE.MeshLambertMaterial({\n  map: THREE.ImageUtils.loadTexture('src/medias/images/earth.jpg')\n});\nvar earthMesh = new THREE.Mesh(new THREE.SphereGeometry(30,30,30), earthMaterial);\n\nvar deathStarMaterial = new THREE.MeshLambertMaterial({\n  map: THREE.ImageUtils.loadTexture('src/medias/images/deathStar.jpg')\n});\nvar deathStarMesh = new THREE.Mesh(new THREE.SphereGeometry(25,30,30), deathStarMaterial);\n\nvar worldData = {\n  limit:null,\n};\nworldData.limit = loadModel({\n  content : '  ****, ******,********,********,********,********, ******,  ****/   **,  ****, ******,********,********, ******,  ****,   **/,   **,  ****, ******, ******,  ****,   **/',\n  modelSize : {x:0.45,y:0.45,z:0.15},\n  material : [new THREE.MeshPhongMaterial({ color: 0xff0040, specular: 0xffffff, shininess: 200 })],\n  geometry : padBlockGeometry,\n  blockSize : 0.05,\n  axe: 'z',\n});\n\n/**\n * BONUS\n **/\n\nvar bonusData = {\n  type: [\n    { model:null },\n    { model:null },\n  ]\n};\nbonusData.type[0].model = loadModel({\n  content : ',   **,  ****, ******, ******,  ****,   **/   **,  ****, ******,********,********, ******,  ****,   **/  ****, ******,********,********,********,********, ******,  ****/  ****, ******,********,********,********,********, ******,  ****/   **,  ****, ******,********,********, ******,  ****,   **/,   **,  ****, ******, ******,  ****,   **/',\n  modelSize : {x:0.8,y:0.8,z:1.0},\n  material : [new THREE.MeshPhongMaterial({ color: 0x2bb121, specular: 0xffffff, shininess: 200 })],\n  axe: 'z',\n});\nbonusData.type[1].model = loadModel({\n  content : ',   **,  ****, ******, ******,  ****,   **/   **,  ****, ******,********,********, ******,  ****,   **/  ****, ******,********,********,********,********, ******,  ****/  ****, ******,********,********,********,********, ******,  ****/   **,  ****, ******,********,********, ******,  ****,   **/,   **,  ****, ******, ******,  ****,   **/',\n  modelSize : {x:0.8,y:0.8,z:1.0},\n  material : [new THREE.MeshPhongMaterial({ color: 0xf1eb42, specular: 0xffffff, shininess: 200 })],\n  axe: 'z',\n});\n\n/**\n * OTHERS\n **/\n\nvar textData = {};\nvar textArray = ['+150', '+200', '+100', '+500', 'MEGA SHOT', '+1 LIFE'];\ntextArray.forEach(function(text){\n  textData[text] = textMesh({\n    text:text,\n    color:'rgba(255,255,255,1)',\n    font:'Bold 50px Arial',\n    width: 5,\n    height: 3,\n  });\n});\n\n// polyfill\nif(!Date.now) {\n  Date.now = function() { return new Date().getTime(); }\n}"]}