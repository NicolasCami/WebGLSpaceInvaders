{"version":3,"sources":["3dobject/materialservice.ts"],"names":[],"mappings":"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","file":"materialservice.js","sourcesContent":["export class MaterialService {\n\n    private static material: any;\n    private static materials: any;\n\n    static init() {\n\n        MaterialService.material = {};\n        MaterialService.materials = {};\n\n        let groundTexture = THREE.ImageUtils.loadTexture('src/medias/images/pad.jpg');\n        groundTexture.wrapS = THREE.RepeatWrapping;\n        groundTexture.wrapT = THREE.RepeatWrapping;\n        groundTexture.repeat.set( 4, 4 );\n\n        MaterialService.material = {\n            pad: new THREE.MeshLambertMaterial({\n                    map: THREE.ImageUtils.loadTexture('src/medias/images/pad.png')\n                }),\n            block: new THREE.MeshLambertMaterial({\n                    map: THREE.ImageUtils.loadTexture('src/medias/images/block.jpg')\n                }),\n            padMissile: new THREE.MeshLambertMaterial({ color: 0x00ff00 }),\n            alienMissile: new THREE.MeshLambertMaterial({ color: 0xff0000 }),\n            ground: new THREE.MeshPhongMaterial({\n                    map: groundTexture,\n                    side: THREE.DoubleSide, \n                    specular: 0xffffff, \n                    shininess: 200\n                })\n        };\n\n        MaterialService.materials.pad = [\n            MaterialService.material.pad\n        ];\n\n        MaterialService.materials.block = [\n            new THREE.MeshPhongMaterial({ color: 0xff6400, specular: 0xffffff, shininess: 200 }),\n            new THREE.MeshPhongMaterial({ color: 0xff8b40, specular: 0xffffff, shininess: 200 }),\n            new THREE.MeshPhongMaterial({ color: 0xffaa73, specular: 0xffffff, shininess: 200 }),\n            new THREE.MeshPhongMaterial({ color: 0xa64100, specular: 0xffffff, shininess: 200 }),\n        ];\n\n        MaterialService.materials['alien-bottom'] = [\n            new THREE.MeshPhongMaterial({ color: 0x87b073, specular: 0xffffff, shininess: 200 }),\n            new THREE.MeshPhongMaterial({ color: 0x85b66c, specular: 0xffffff, shininess: 200 }),\n            new THREE.MeshPhongMaterial({ color: 0x689d4e, specular: 0xffffff, shininess: 200 }),\n            new THREE.MeshPhongMaterial({ color: 0x658954, specular: 0xffffff, shininess: 200 }),\n        ];\n        MaterialService.materials['alien-middle'] = [\n            new THREE.MeshPhongMaterial({ color: 0x547289, specular: 0xffffff, shininess: 200 }),\n            new THREE.MeshPhongMaterial({ color: 0x5789b0, specular: 0xffffff, shininess: 200 }),\n            new THREE.MeshPhongMaterial({ color: 0x3d6686, specular: 0xffffff, shininess: 200 }),\n            new THREE.MeshPhongMaterial({ color: 0x7093ae, specular: 0xffffff, shininess: 200 }),\n        ];\n        MaterialService.materials['alien-top'] = [\n            new THREE.MeshPhongMaterial({ color: 0x9d70ae, specular: 0xffffff, shininess: 200 }),\n            new THREE.MeshPhongMaterial({ color: 0xc096d0, specular: 0xffffff, shininess: 200 }),\n            new THREE.MeshPhongMaterial({ color: 0xaf72c5, specular: 0xffffff, shininess: 200 }),\n            new THREE.MeshPhongMaterial({ color: 0xb08bbd, specular: 0xffffff, shininess: 200 }),\n        ];\n        MaterialService.materials['alien-bonus'] = [\n            new THREE.MeshLambertMaterial({ color: 0xb83535 }),\n            new THREE.MeshLambertMaterial({ color: 0xdb4f4f }),\n            new THREE.MeshLambertMaterial({ color: 0xb12727 }),\n            new THREE.MeshLambertMaterial({ color: 0xdd1919 }),\n        ];\n\n    }\n\n    static getSingleByName(name: string) {\n\n        let result;\n\n        if(name in MaterialService.material) {\n            result = MaterialService.material[name];\n        }\n        else {\n            throw new Error(\"MaterialService: material does not exists: \" + name);\n        }\n\n        return result;\n\n    }\n\n    static getByName(name: string) {\n\n        let result;\n\n        if(name in MaterialService.materials) {\n            result = MaterialService.materials[name];\n        }\n        else {\n            throw new Error(\"MaterialService: material does not exists: \" + name);\n        }\n\n        return result;\n\n    }\n\n}\n"]}