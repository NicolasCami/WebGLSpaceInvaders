{"version":3,"sources":["3dobject/pad.ts"],"names":[],"mappings":"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","file":"pad.js","sourcesContent":["import { Game } from \"../core/game\";\nimport { Game3dObject } from \"./abstract.game3dobject\";\nimport { MeshService } from \"../3dobject/meshservice\";\nimport { SoundService } from \"../sound/soundservice\";\nimport { Missile } from \"../3dobject/missile\";\nimport { Bonus } from \"../3dobject/bonus\";\nimport { ScoreAnimation } from \"../3dobject/scoreanimation\";\n\nexport class Pad extends Game3dObject {\n\n    static increment = 0.15;\n    static fireDelay = 2000.0;\n    static fireDelayFast = 500.0;\n    static width = 1.0;\n    static rotationDelay = 50.0;\n    static rotationMaxAngleRadian = 0.5;\n    static rotationIncrement = 0.1;\n\n    positionBounds: any;\n    missileStartPosition: THREE.Vector3;\n    lastFire: number;\n    movingLeft: boolean;\n    movingRight: boolean;\n    movingTime: number;\n    missileInvincible: number;\n    missileFast: number;\n    curve: THREE.QuadraticBezierCurve3;\n    curveProgress: number;\n\n    constructor(positionBounds: any = { min: 0, max: 1 },\n                position: THREE.Vector3 = new THREE.Vector3(0.0, 0.0, 0.0)) {\n\n        super(new THREE.Vector3(Pad.increment, 0.0, 0.0), position);\n        \n        this.positionBounds = positionBounds;\n        this.missileStartPosition = new THREE.Vector3(0.0, 1.0, 0.0);\n        this.lastFire = 0;\n        this.movingLeft = false;\n        this.movingRight = false;\n        this.movingTime = 0;\n        this.missileInvincible = 0;\n        this.missileFast = 0;\n        this.curve = null;\n        this.curveProgress = 100;\n\n        this.init();\n\n    }\n\n    public initMesh() {\n        this.mesh = MeshService.getRandomByName('pad');\n    }\n\n    public left() {\n        this.movingLeft = true;\n        this.movingRight = false;\n        this.movingTime = Date.now();\n        this.mesh.position.x -= Pad.increment;\n        if(this.mesh.position.x < this.positionBounds.min + Pad.width) {\n          this.mesh.position.x = this.positionBounds.min + Pad.width;\n        }\n    }\n\n    public right() {\n        this.movingRight = true;\n        this.movingLeft = false;\n        this.movingTime = Date.now();\n        this.mesh.position.x += Pad.increment;\n        if(this.mesh.position.x > this.positionBounds.max - Pad.width) {\n          this.mesh.position.x = this.positionBounds.max - Pad.width;\n        }\n    }\n\n    public animate() {\n        if(Date.now()-this.movingTime > Pad.rotationDelay) {\n          this.movingLeft = false;\n          this.movingRight = false;\n        }\n        if(this.movingLeft) {\n          this.mesh.rotation.y -= Pad.rotationIncrement;\n          if(this.mesh.rotation.y < -Pad.rotationMaxAngleRadian) {\n            this.mesh.rotation.y = -Pad.rotationMaxAngleRadian;\n          }\n        }\n        else if(this.movingRight) {\n          this.mesh.rotation.y += Pad.rotationIncrement;\n          if(this.mesh.rotation.y > Pad.rotationMaxAngleRadian) {\n            this.mesh.rotation.y = Pad.rotationMaxAngleRadian;\n          }\n        }\n        else {\n          if(this.mesh.rotation.y > -0.15 && this.mesh.rotation.y < 0.15) {\n            this.mesh.rotation.y = 0.0;\n          }\n          else if(this.mesh.rotation.y < 0.0) {\n            this.mesh.rotation.y += Pad.rotationIncrement;\n          }\n          else if(this.mesh.rotation.y > 0.0) {\n            this.mesh.rotation.y -= Pad.rotationIncrement;\n          }\n        }\n    }\n\n    public resetPosition() {\n        this.lastFire = 0;\n        this.movingLeft = false;\n        this.movingRight = false;\n        this.movingTime = 0;\n        this.mesh.rotation.y = 0;\n        this.mesh.position.x = 0;\n    }\n\n    public animateResetInit() {\n        this.curve = new THREE.QuadraticBezierCurve3(new THREE.Vector3(this.mesh.position.x, this.mesh.position.y, this.mesh.position.z), new THREE.Vector3(this.mesh.position.x / 2, this.mesh.position.y / 2, 3), new THREE.Vector3(0.0, 0.0, 0.0));\n        this.curveProgress = 0.0;\n    }\n\n    public animateReset() : boolean {\n        if(this.curveProgress < 1.0) {\n          var point = this.curve.getPoint(this.curveProgress);\n          this.mesh.position.x = point.x;\n          this.mesh.position.y = point.y;\n          this.mesh.position.z = point.z;\n          this.mesh.rotation.y = (2*Math.PI * this.curveProgress);\n          this.curveProgress += 0.02;\n          Game.getInstance().updateCameraPad();\n        }\n        else {\n          this.mesh.rotation.y = 0;\n          return true;\n        }\n\n        return false;\n    }\n\n    public fire() : Missile | boolean {\n        var delay = Pad.fireDelay;\n        if(this.missileFast > 0) {\n          delay = Pad.fireDelayFast;\n        }\n\n        if(Date.now()-this.lastFire > delay) {\n          SoundService.getSoundByName('pad-fire').play();\n          var m = null;\n          if(this.missileInvincible) {\n            m = new Missile(true, false, this.mesh.position.clone().add(this.missileStartPosition));\n            this.missileInvincible -= 1;\n          }\n          else {\n            m = new Missile(false, false, this.mesh.position.clone().add(this.missileStartPosition));\n          }\n          if(this.missileFast > 0) {\n            this.missileFast -= 1;\n          }\n          this.lastFire = Date.now();\n          return m;\n        }\n        return false;\n    }\n\n    public resetFireDelay() {\n        this.lastFire = 0;\n    }\n\n    public addBonus(bonus) {\n        let e: ScoreAnimation;\n        \n        switch(bonus.getType()) {\n            case Bonus.type.superMissile:\n                this.missileInvincible += 1;\n                e = new ScoreAnimation('MEGA SHOT', this.mesh.position.clone());\n                Game.getInstance().world.scores.push(e);\n                break;\n\n            case Bonus.type.extraLife:\n                Game.getInstance().updateLife(Game.getInstance().life+1);\n                e = new ScoreAnimation('+1 LIFE', this.mesh.position.clone());\n                Game.getInstance().world.scores.push(e);\n                break;\n\n            default:\n                console.log('Warning: catching unknown bonus. No effect!');\n                break;\n        }\n    }\n}\n"]}