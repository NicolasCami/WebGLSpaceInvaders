{"version":3,"sources":["pad.ts"],"names":[],"mappings":"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","file":"pad.js","sourcesContent":["class Pad {\n\n    static INCREMENT = 0.15;\n    static FIRE_DELAY = 2000.0;\n    static FIRE_DELAY_FAST = 500.0;\n    static WIDTH = 1.0;\n    static DELAY_ROTATION = 50.0;\n    static MAX_ROTATION = 0.5;\n    static INCREMENT_ROTATION = 0.1;\n\n    mesh: THREE.Mesh;\n    size: any;\n    missileX: number;\n    missileY: number;\n    missileZ: number;\n    screenMinX: number;\n    screenMaxX: number;\n    lastFire: number;\n    movingLeft: boolean;\n    movingRight: boolean;\n    movingTime: number;\n    missileInvincible: number;\n    missileFast: number;\n    curve: THREE.QuadraticBezierCurve3;\n    curveProgress: number;\n    game: Game;\n\n    constructor(params: any, game: Game) {\n        let model = loadModel({\n            content : ',          **      **,         *  *    *  *,         *  *    *  *,          **      **,          **      **,         *  *    *  *,         *  *    *  *,          **      **/*                            *,          **      **,         **** ** ****,         ************,         ************,         ************,         ************,         ************,          **      **,*                            */***                        ***,   **     **      **     **,     **  ************  **,       ****************,         ************,         ************,       ****************,     **  ************  **,   **     **      **     **,***                        ***/***                        ***,   **     **      **     **,     **  ************  **,       ****************,         ************,         ************,       ****************,     **  ************  **,   **     **      **     **,***                        ***/*                            *,          **      **,         **** ** ****,         ************,         ************,         ************,         ************,         ************,          **      **,*                            */*                            *,,              **,            ******,            ******,            ******,            ******,              **,,*                            */*                            *,,              **,            ******,            ******,            ******,            ******,              **,,*                            */*                            *,,              **,            ******,            ******,            ******,            ******,              **,,*                            */*                            *,,              **,            ******,            ******,            ******,            ******,              **,,*                            */*                            *,,              **,            ******,            ******,            ******,            ******,              **,,*                            */,,              **,            ******,            ******,            ******,            ******,              **/,,              **,            ******,            ******,            ******,            ******,              **/,,,             ****,            ******,            ******,             ****,/,,,             ****,            ******,            ******,             ****,/,,,              **,             ****,             ****,              **/',\n            modelSize : {x:1.5,y:0.75,z:1.0},\n            material : padMaterials,\n            geometry : padBlockGeometry,\n            blockSize : 0.05,\n            axe : 'y',\n        });\n        this.mesh = model;\n\n        this.size = typeof params.size !== 'undefined' ? params.size : {x:1.5,y:0.75,z:1.0};\n        this.missileX = typeof params.missileX !== 'undefined' ? params.missileX : 0.0;\n        this.missileY = typeof params.missileY !== 'undefined' ? params.missileY : 1.0;\n        this.missileZ = typeof params.missileZ !== 'undefined' ? params.missileZ : 0.0;\n        this.screenMinX = typeof params.minx !== 'undefined' ? params.minx : -5.0;\n        this.screenMaxX = typeof params.maxx !== 'undefined' ? params.maxx : 5.0;\n        this.lastFire = 0;\n        this.movingLeft = false;\n        this.movingRight = false;\n        this.movingTime = 0;\n        this.missileInvincible = 0;\n        this.missileFast = 0;\n        this.curve = null;\n        this.curveProgress = 100;\n        this.game = game;\n    }\n\n    // animation\n    public left = function() {\n        this.movingLeft = true;\n        this.movingRight = false;\n        this.movingTime = Date.now();\n        this.mesh.position.x -= Pad.INCREMENT;\n        if(this.mesh.position.x < this.screenMinX+Pad.WIDTH) {\n          this.mesh.position.x = this.screenMinX+Pad.WIDTH;\n        }\n    }\n\n    public right = function() {\n        this.movingRight = true;\n        this.movingLeft = false;\n        this.movingTime = Date.now();\n        this.mesh.position.x += Pad.INCREMENT;\n        if(this.mesh.position.x > this.screenMaxX-Pad.WIDTH) {\n          this.mesh.position.x = this.screenMaxX-Pad.WIDTH;\n        }\n    }\n\n    public animate = function() {\n        if(Date.now()-this.movingTime > Pad.DELAY_ROTATION) {\n          this.movingLeft = false;\n          this.movingRight = false;\n        }\n        if(this.movingLeft) {\n          this.mesh.rotation.y -= Pad.INCREMENT_ROTATION;\n          if(this.mesh.rotation.y < -Pad.MAX_ROTATION) {\n            this.mesh.rotation.y = -Pad.MAX_ROTATION;\n          }\n        }\n        else if(this.movingRight) {\n          this.mesh.rotation.y += Pad.INCREMENT_ROTATION;\n          if(this.mesh.rotation.y > Pad.MAX_ROTATION) {\n            this.mesh.rotation.y = Pad.MAX_ROTATION;\n          }\n        }\n        else {\n          if(this.mesh.rotation.y > -0.15 && this.mesh.rotation.y < 0.15) {\n            this.mesh.rotation.y = 0.0;\n          }\n          else if(this.mesh.rotation.y < 0.0) {\n            this.mesh.rotation.y += Pad.INCREMENT_ROTATION;\n          }\n          else if(this.mesh.rotation.y > 0.0) {\n            this.mesh.rotation.y -= Pad.INCREMENT_ROTATION;\n          }\n        }\n    }\n\n    public resetPosition = function() {\n        this.lastFire = 0;\n        this.movingLeft = false;\n        this.movingRight = false;\n        this.movingTime = 0;\n        this.mesh.rotation.y = 0;\n        this.mesh.position.x = 0;\n    }\n\n    public animateResetInit = function() {\n        this.curve = new THREE.QuadraticBezierCurve3();\n        this.curve.v0 = new THREE.Vector3(this.mesh.position.x, this.mesh.position.y, this.mesh.position.z);\n        this.curve.v1 = new THREE.Vector3(this.mesh.position.x / 2, this.mesh.position.y / 2, 3);\n        this.curve.v2 = new THREE.Vector3(0, 0.0, 0.0);\n        this.curveProgress = 0.0;\n    }\n\n    public animateReset = function() {\n        if(this.curveProgress < 1.0) {\n          var point = this.curve.getPoint(this.curveProgress);\n          this.mesh.position.x = point.x;\n          this.mesh.position.y = point.y;\n          this.mesh.position.z = point.z;\n          this.mesh.rotation.y = (2*Math.PI * this.curveProgress);\n          this.curveProgress += 0.02;\n          this.game.updateCameraPad();\n        }\n        else {\n          this.mesh.rotation.y = 0;\n          return true;\n        }\n\n        return false;\n    }\n\n    public fire = function() {\n        var delay = Pad.FIRE_DELAY;\n        if(this.missileFast > 0) {\n          delay = Pad.FIRE_DELAY_FAST;\n        }\n\n        if(Date.now()-this.lastFire > delay) {\n          soundPadFire.play();\n          var m = null;\n          if(this.missileInvincible) {\n            m = new Missile({\n              x : this.mesh.position.x + this.missileX,\n              y : this.mesh.position.y + this.missileY,\n              z : this.mesh.position.z + this.missileZ,\n              invincible : true,\n            }, this.game);\n            this.missileInvincible -= 1;\n          }\n          else {\n            m = new Missile({\n              x : this.mesh.position.x + this.missileX,\n              y : this.mesh.position.y + this.missileY,\n              z : this.mesh.position.z + this.missileZ,\n            }, this.game);\n          }\n          if(this.missileFast > 0) {\n            this.missileFast -= 1;\n          }\n          //console.log(Date.now() + \" : fire\");\n          this.lastFire = Date.now();\n          return m;\n        }\n        return false;\n    }\n\n    public resetFireDelay = function() {\n        this.lastFire = 0;\n    }\n\n    public getX = function() {\n        return this.mesh.position.x;\n    }\n\n    public getY = function() {\n      return this.mesh.position.y;\n    }\n\n    public minX = function() {\n      return this.mesh.position.x-(this.size.x/2);\n    }\n\n    public minY = function() {\n      return this.mesh.position.y-(this.size.y/2);\n    }\n\n    public minZ = function() {\n      return this.mesh.position.z-(this.size.z/2);\n    }\n\n    public maxX = function() {\n      return this.mesh.position.x+(this.size.x/2);\n    }\n\n    public maxY = function() {\n      return this.mesh.position.y+(this.size.y/2);\n    }\n\n    public maxZ = function() {\n      return this.mesh.position.z+(this.size.z/2);\n    }\n\n    public addBonus = function(bonus) {\n        let e: ScoreAnimation;\n        \n        switch(bonus.getType()) {\n          case 1:\n            this.missileInvincible += 1;\n            e = new ScoreAnimation({\n              x : this.mesh.position.x,\n              y : this.mesh.position.y,\n              z : this.mesh.position.z,\n              text : 'MEGA SHOT',\n            }, this.game);\n            this.game.world.scores.push(e);\n            break;\n            \n          case 2:\n            this.game.updateLife(this.game.life+1);\n            e = new ScoreAnimation({\n              x : this.mesh.position.x,\n              y : this.mesh.position.y,\n              z : this.mesh.position.z,\n              text : '+1 LIFE',\n            }, this.game);\n            this.game.world.scores.push(e);\n            break;\n          \n          default:\n            break;\n        }\n    }\n}\n"]}