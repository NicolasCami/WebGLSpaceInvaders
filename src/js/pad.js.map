{"version":3,"sources":["pad.ts"],"names":[],"mappings":"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","file":"pad.js","sourcesContent":["class Pad extends Game3dObject {\n\n    static increment = 0.15;\n    static fireDelay = 2000.0;\n    static fireDelayFast = 500.0;\n    static width = 1.0;\n    static rotationDelay = 50.0;\n    static rotationMaxAngleRadian = 0.5;\n    static rotationIncrement = 0.1;\n\n    positionBounds: any;\n    missileStartPosition: THREE.Vector3;\n    lastFire: number;\n    movingLeft: boolean;\n    movingRight: boolean;\n    movingTime: number;\n    missileInvincible: number;\n    missileFast: number;\n    curve: THREE.QuadraticBezierCurve3;\n    curveProgress: number;\n\n    constructor(positionBounds: any = { min: 0, max: 1 },\n                position: THREE.Vector3 = new THREE.Vector3(0.0, 0.0, 0.0)) {\n\n        super(new THREE.Vector3(1.5, 0.75, 1.0), new THREE.Vector3(Pad.increment, 0.0, 0.0), position);\n        \n        this.positionBounds = positionBounds;\n        this.missileStartPosition = new THREE.Vector3(0.0, 1.0, 0.0);\n        this.lastFire = 0;\n        this.movingLeft = false;\n        this.movingRight = false;\n        this.movingTime = 0;\n        this.missileInvincible = 0;\n        this.missileFast = 0;\n        this.curve = null;\n        this.curveProgress = 100;\n\n        this.init();\n\n    }\n\n    public initMesh() {\n        let model = loadModel({\n            content : ',          **      **,         *  *    *  *,         *  *    *  *,          **      **,          **      **,         *  *    *  *,         *  *    *  *,          **      **/*                            *,          **      **,         **** ** ****,         ************,         ************,         ************,         ************,         ************,          **      **,*                            */***                        ***,   **     **      **     **,     **  ************  **,       ****************,         ************,         ************,       ****************,     **  ************  **,   **     **      **     **,***                        ***/***                        ***,   **     **      **     **,     **  ************  **,       ****************,         ************,         ************,       ****************,     **  ************  **,   **     **      **     **,***                        ***/*                            *,          **      **,         **** ** ****,         ************,         ************,         ************,         ************,         ************,          **      **,*                            */*                            *,,              **,            ******,            ******,            ******,            ******,              **,,*                            */*                            *,,              **,            ******,            ******,            ******,            ******,              **,,*                            */*                            *,,              **,            ******,            ******,            ******,            ******,              **,,*                            */*                            *,,              **,            ******,            ******,            ******,            ******,              **,,*                            */*                            *,,              **,            ******,            ******,            ******,            ******,              **,,*                            */,,              **,            ******,            ******,            ******,            ******,              **/,,              **,            ******,            ******,            ******,            ******,              **/,,,             ****,            ******,            ******,             ****,/,,,             ****,            ******,            ******,             ****,/,,,              **,             ****,             ****,              **/',\n            modelSize : {x:1.5,y:0.75,z:1.0},\n            material : padMaterials,\n            geometry : padBlockGeometry,\n            blockSize : 0.05,\n            axe : 'y',\n        });\n        this.mesh = model;\n    }\n\n    public left() {\n        this.movingLeft = true;\n        this.movingRight = false;\n        this.movingTime = Date.now();\n        this.mesh.position.x -= Pad.increment;\n        if(this.mesh.position.x < this.positionBounds.min + Pad.width) {\n          this.mesh.position.x = this.positionBounds.min + Pad.width;\n        }\n    }\n\n    public right() {\n        this.movingRight = true;\n        this.movingLeft = false;\n        this.movingTime = Date.now();\n        this.mesh.position.x += Pad.increment;\n        if(this.mesh.position.x > this.positionBounds.max - Pad.width) {\n          this.mesh.position.x = this.positionBounds.max - Pad.width;\n        }\n    }\n\n    public animate() {\n        if(Date.now()-this.movingTime > Pad.rotationDelay) {\n          this.movingLeft = false;\n          this.movingRight = false;\n        }\n        if(this.movingLeft) {\n          this.mesh.rotation.y -= Pad.rotationIncrement;\n          if(this.mesh.rotation.y < -Pad.rotationMaxAngleRadian) {\n            this.mesh.rotation.y = -Pad.rotationMaxAngleRadian;\n          }\n        }\n        else if(this.movingRight) {\n          this.mesh.rotation.y += Pad.rotationIncrement;\n          if(this.mesh.rotation.y > Pad.rotationMaxAngleRadian) {\n            this.mesh.rotation.y = Pad.rotationMaxAngleRadian;\n          }\n        }\n        else {\n          if(this.mesh.rotation.y > -0.15 && this.mesh.rotation.y < 0.15) {\n            this.mesh.rotation.y = 0.0;\n          }\n          else if(this.mesh.rotation.y < 0.0) {\n            this.mesh.rotation.y += Pad.rotationIncrement;\n          }\n          else if(this.mesh.rotation.y > 0.0) {\n            this.mesh.rotation.y -= Pad.rotationIncrement;\n          }\n        }\n    }\n\n    public resetPosition() {\n        this.lastFire = 0;\n        this.movingLeft = false;\n        this.movingRight = false;\n        this.movingTime = 0;\n        this.mesh.rotation.y = 0;\n        this.mesh.position.x = 0;\n    }\n\n    public animateResetInit() {\n        this.curve = new THREE.QuadraticBezierCurve3(new THREE.Vector3(this.mesh.position.x, this.mesh.position.y, this.mesh.position.z), new THREE.Vector3(this.mesh.position.x / 2, this.mesh.position.y / 2, 3), new THREE.Vector3(0.0, 0.0, 0.0));\n        this.curveProgress = 0.0;\n    }\n\n    public animateReset() : boolean {\n        if(this.curveProgress < 1.0) {\n          var point = this.curve.getPoint(this.curveProgress);\n          this.mesh.position.x = point.x;\n          this.mesh.position.y = point.y;\n          this.mesh.position.z = point.z;\n          this.mesh.rotation.y = (2*Math.PI * this.curveProgress);\n          this.curveProgress += 0.02;\n          Game.getInstance().updateCameraPad();\n        }\n        else {\n          this.mesh.rotation.y = 0;\n          return true;\n        }\n\n        return false;\n    }\n\n    public fire() : Missile | boolean {\n        var delay = Pad.fireDelay;\n        if(this.missileFast > 0) {\n          delay = Pad.fireDelayFast;\n        }\n\n        if(Date.now()-this.lastFire > delay) {\n          soundPadFire.play();\n          var m = null;\n          if(this.missileInvincible) {\n            m = new Missile(true, false, this.mesh.position.clone().add(this.missileStartPosition));\n            this.missileInvincible -= 1;\n          }\n          else {\n            m = new Missile(false, false, this.mesh.position.clone().add(this.missileStartPosition));\n          }\n          if(this.missileFast > 0) {\n            this.missileFast -= 1;\n          }\n          this.lastFire = Date.now();\n          return m;\n        }\n        return false;\n    }\n\n    public resetFireDelay() {\n        this.lastFire = 0;\n    }\n\n    public addBonus(bonus) {\n        let e: ScoreAnimation;\n        \n        switch(bonus.getType()) {\n            case Bonus.type.superMissile:\n                this.missileInvincible += 1;\n                e = new ScoreAnimation('MEGA SHOT', this.mesh.position.clone());\n                Game.getInstance().world.scores.push(e);\n                break;\n\n            case Bonus.type.extraLife:\n                Game.getInstance().updateLife(Game.getInstance().life+1);\n                e = new ScoreAnimation('+1 LIFE', this.mesh.position.clone());\n                Game.getInstance().world.scores.push(e);\n                break;\n\n            default:\n                console.log('Warning: catching unknown bonus. No effect!');\n                break;\n        }\n    }\n}\n"]}