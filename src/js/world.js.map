{"version":3,"sources":["world.ts"],"names":[],"mappings":"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","file":"world.js","sourcesContent":["import { Game } from \"./game\";\nimport { SoundService } from \"./soundservice\";\nimport { Block } from \"./block\";\nimport { Missile } from \"./missile\";\nimport { Bonus } from \"./bonus\";\nimport { AlienGroup } from \"./aliengroup\";\nimport { AlienBonus } from \"./alienbonus\";\nimport { Pad } from \"./pad\";\nimport { Explosion } from \"./explosion\";\nimport { ScoreAnimation } from \"./scoreanimation\";\nimport { Key } from \"./key\";\n\nexport class World {\n\n    static bonusRate = 0.1;\n\n    missiles = [];\n    lights = [];\n    blocks: Block[];\n    explosions = [];\n    scores = [];\n    bonus = [];\n    alienBonus = [];\n    x: number;\n    y: number;\n    z: number;\n    width: number;\n    height: number;\n    limitY: number;\n    level: number;\n    onLevelInit: boolean;\n    LastFire: number;\n    lastAlienBonus: number;\n    alienBonusDelay: number;\n    invincible: boolean;\n    destructionTimer: number;\n    destructionDelay: number;\n    earthDestroyed: boolean;\n\n    caster: THREE.Raycaster;\n    earth: THREE.Mesh;\n    deathStar: THREE.Mesh;\n    place: THREE.Mesh;\n    deathBeamLoad: THREE.PointLight;\n    deathBeam: THREE.PointLight;\n    \n    alienGroup: AlienGroup;\n    pad: Pad;\n\n    constructor(params: any) {\n        this.missiles = [];\n        this.lights = [];\n        this.blocks = [];\n        this.explosions = [];\n        this.scores = [];\n        this.bonus = [];\n        this.alienBonus = [];\n        this.caster = new THREE.Raycaster();\n        this.x = typeof params.x !== 'undefined' ? params.x : 0.0;\n        this.y = typeof params.y !== 'undefined' ? params.y : 0.0;\n        this.z = typeof params.z !== 'undefined' ? params.z : 0.0;\n        this.width = typeof params.width !== 'undefined' ? params.width : 10.0;\n        this.height = typeof params.height !== 'undefined' ? params.height : 10.0;\n        this.limitY = this.height;\n        this.level = 0;\n        this.onLevelInit = false;\n        this.alienGroup = new AlienGroup();\n        this.LastFire = 0;\n        this.lastAlienBonus = 0;\n        this.alienBonusDelay = 2000;\n        this.invincible = false;\n        this.earth = new THREE.Mesh(\n            new THREE.SphereGeometry(30,30,30),\n            new THREE.MeshLambertMaterial({\n                map: THREE.ImageUtils.loadTexture('src/medias/images/earth.jpg')\n            })\n        );\n        this.deathStar = new THREE.Mesh(\n            new THREE.SphereGeometry(25,30,30),\n            new THREE.MeshLambertMaterial({\n                map: THREE.ImageUtils.loadTexture('src/medias/images/deathStar.jpg')\n            })\n        );\n        this.place = new THREE.Mesh(new THREE.SphereGeometry(30,30,30));\n        this.destructionTimer = Date.now();\n        this.destructionDelay = 40000;\n        this.earthDestroyed = false;\n\n        this.init();\n    }\n\n    private init() {\n        this.destructionTimer = Date.now();\n\n        this.place.position.set(this.x, this.y-200, this.z+0.1);\n        let squareMaterial = new THREE.MeshPhongMaterial({\n          color:0xFFFFFF,\n          side:THREE.DoubleSide,\n          opacity:0.5,\n          specular: 0xffffff,\n          shininess: 200,\n          transparent:true,\n        });\n\n        let ground = new THREE.Mesh(new THREE.BoxGeometry(this.width, this.height, 0.1), groundMaterial);\n        ground.position.set(this.x, this.y+2, this.z);\n        ground.receiveShadow = true;\n        Game.getInstance().scene.add(ground);\n\n        let sphere = new THREE.SphereGeometry( 0.2, 16, 8 );\n\n        // plots de signalisation : limite alien\n        for(let i=0; i<8; i++) {\n          let tmp = worldData.limit.clone();\n          tmp.position.set(this.x-(this.width/2)+0.5 + i*2.7, this.y-2, this.z+0.2);\n          Game.getInstance().scene.add(tmp);\n        }\n\n        missileLight1.position.copy(this.place.position);\n        missileLight2.position.copy(this.place.position);\n        missileLight3.position.copy(this.place.position);\n        missileLight4.position.copy(this.place.position);\n        this.lights.push(missileLight1);\n        this.lights.push(missileLight2);\n        this.lights.push(missileLight3);\n        this.lights.push(missileLight4);\n\n        this.deathBeamLoad = new THREE.PointLight( 0x00ff00, 2, 20 );\n        this.deathBeamLoad.add( new THREE.Mesh( sphere, new THREE.MeshBasicMaterial( { color: 0x00ff00 } ) ) );\n        this.deathBeamLoad.position.set(114, 255, -80);\n        Game.getInstance().scene.add( this.deathBeamLoad );\n        this.deathBeam = new THREE.PointLight( 0x00ff00, 2, 20 );\n        this.deathBeam.add( new THREE.Mesh(new THREE.PlaneGeometry( 1, 5, 5 ), new THREE.MeshBasicMaterial( { color: 0x00ff00 } )) );\n        this.deathBeam.position.set(114, 255, -80);\n        Game.getInstance().scene.add( this.deathBeam );\n\n        this.earth.position.set(-140, 255, -80);\n        this.deathStar.position.set(140, 255, -80);\n        this.deathStar.rotation.x -= 49;\n        this.earth.rotation.x += 1.2;\n\n        Game.getInstance().scene.add(this.earth);\n        Game.getInstance().scene.add(this.deathStar);\n\n        this.pad = new Pad({ min: this.x-this.width/2.0, max: this.x+this.width/2.0 });\n        Game.getInstance().scene.add(this.pad.mesh);\n    }\n\n    public addBlock(block: Block) {\n        this.blocks.push(block);\n    }\n\n    public addAlienBonus() {\n        let a = new AlienBonus();\n        this.alienBonus.push(a);\n    }\n\n    public randomAlienBonus() {\n        if(this.alienBonus.length == 0) {\n          if(Date.now()-this.lastAlienBonus > this.alienBonusDelay) {\n            this.addAlienBonus();\n            this.lastAlienBonus = Date.now();\n          }\n        }\n    }\n\n    public buildBunker(x: number,y: number) {\n        let size = 0.6;\n        for(let i=0; i<4; i++) {\n          for(let j=0; j<(3-this.level); j++) {\n            let b = new Block(new THREE.Vector3(x+(size-0.01)*i, y+(size-0.01)*j, Math.random()*6.0));\n            this.addBlock(b);\n          }\n        }\n    }\n\n    public initLevel(level: number) {\n        this.level = level;\n        this.onLevelInit = true;\n        this.pad.mesh.visible = true;\n        this.pad.animateResetInit();\n        this.clear();\n\n        switch(this.level) {\n          \n          case 0:\n            this.alienGroup.init(5,5,level);\n            for(let i= 0; i < this.alienGroup.getLength(); i++) {\n              this.alienGroup.get(i).mesh.position.z = Math.random()*6.0;\n              Game.getInstance().scene.add(this.alienGroup.get(i).mesh);\n              Game.getInstance().scene.add(this.alienGroup.get(i).mesh2);\n            }\n\n            this.initBunkers();\n            break;\n            \n          default:\n            this.alienGroup.init(5,5,level);\n            for(let i= 0; i < this.alienGroup.getLength(); i++) {\n              this.alienGroup.get(i).mesh.position.z = Math.random()*6.0;\n              Game.getInstance().scene.add(this.alienGroup.get(i).mesh);\n              Game.getInstance().scene.add(this.alienGroup.get(i).mesh2);\n            }\n\n            this.initBunkers();\n            break;\n        }\n\n        return this.level;\n    }\n\n    public nextLevel() {\n        return this.initLevel(this.level+1);\n    }\n\n    public initBunkers() {\n        this.buildBunker(-7.0, 1.7);\n        this.buildBunker(-3.0, 1.7);\n        this.buildBunker(1.0, 1.7);\n        this.buildBunker(5.0, 1.7);\n    }\n\n    public clear() {\n        for(let j= 0; j < this.blocks.length; j++) {\n          Game.getInstance().scene.remove(this.blocks[j].mesh);\n        }\n        this.blocks = [];\n\n        for(let j= 0; j < this.alienGroup.aliens.length; j++) {\n          Game.getInstance().scene.remove(this.alienGroup.aliens[j].mesh);\n          Game.getInstance().scene.remove(this.alienGroup.aliens[j].mesh2);\n        }\n        this.alienGroup.aliens = [];\n\n        for(let j= 0; j < this.alienBonus.length; j++) {\n          Game.getInstance().scene.remove(this.alienBonus[j].mesh);\n          Game.getInstance().scene.remove(this.alienBonus[j].mesh2);\n        }\n        this.alienBonus = [];\n\n        for(let j= 0; j < this.bonus.length; j++) {\n          Game.getInstance().scene.remove(this.bonus[j].mesh);\n        }\n        this.bonus = [];\n\n        for(let j= 0; j < this.missiles.length; j++) {\n          Game.getInstance().scene.remove(this.missiles[j].mesh);\n        }\n        this.missiles = [];\n\n        for(let j= 0; j < this.explosions.length; j++) {\n          Game.getInstance().scene.remove(this.explosions[j].mesh);\n        }\n        this.explosions = [];\n\n        for(let j= 0; j < this.scores.length; j++) {\n          Game.getInstance().scene.remove(this.scores[j].mesh);\n        }\n        this.scores = [];\n\n        this.lastAlienBonus = Date.now();\n        this.pad.resetPosition();\n    }\n\n    public killThemAll() {\n        for(let j= 0; j < this.alienGroup.getLength(); j++) {\n          SoundService.getSoundByName('alien-explosion').play();\n          let e = new Explosion(1.5, 50, 0.4, 0xff0000, this.alienGroup.get(j).mesh.position.clone());\n          this.explosions.push(e);\n          Game.getInstance().scene.remove(this.alienGroup.get(j).mesh);\n          Game.getInstance().scene.remove(this.alienGroup.get(j).mesh2);\n        }\n        this.alienGroup.aliens = [];\n    }\n\n    public invinciblePad() {\n        if(this.invincible == false)\n          this.invincible = true;\n        else\n          this.invincible = false;\n    }\n\n    public killPad() {\n        let e = new Explosion(1.5, 100, 0.5, 0x2FA1D6, this.pad.mesh.position.clone());\n        this.explosions.push(e);\n    }\n\n    public padFire() {\n        let m = this.pad.fire();\n        if(m instanceof Missile) {\n          this.missiles.push(m);\n        }    \n    }\n\n    public alienFire() {\n        let m = this.alienGroup.fire();\n        if(m instanceof Missile) {\n            this.missiles.push(m);\n            Game.getInstance().scene.add(m.mesh);\n            this.updateMissileLights();\n        }\n    }\n\n    public removeMissile(i: number) {\n        Game.getInstance().scene.remove(this.missiles[i].mesh);\n        this.missiles.splice(i, 1);\n        this.updateMissileLights();\n    }\n\n    public removeAlien(i: number) {\n        Game.getInstance().scene.remove(this.alienGroup.get(i).mesh);\n        Game.getInstance().scene.remove(this.alienGroup.get(i).mesh2);\n        this.alienGroup.remove(i);\n    }\n\n    private updateMissileLights() {\n        // empty\n    }\n\n    public animate() {\n        let e: Explosion;\n        if (this.earthDestroyed == false)\n        {\n          if (Date.now() - this.destructionTimer < this.destructionDelay-4225) {\n            this.deathBeamLoad.scale.setX (this.deathBeamLoad.scale.x + 0.01);\n            this.deathBeamLoad.scale.setY (this.deathBeamLoad.scale.y + 0.01);\n            this.deathBeamLoad.scale.setZ (this.deathBeamLoad.scale.z + 0.01);\n          }\n          else {\n            this.deathBeamLoad.scale.setX (this.deathBeamLoad.scale.x - 0.05);\n            this.deathBeamLoad.scale.setY (this.deathBeamLoad.scale.y - 0.05);\n            this.deathBeamLoad.scale.setZ (this.deathBeamLoad.scale.z - 0.05);\n            this.deathBeam.scale.setX (this.deathBeam.scale.x + 1);\n            this.deathBeam.position.x-= 0.4;\n          }\n          \n          if (Date.now() - this.destructionTimer > this.destructionDelay)\n          {\n            console.log(\"DESTROY EARTH\");\n            this.earth.visible= false;\n            this.earthDestroyed = true;\n            this.deathBeamLoad.visible = false;\n            let e = new Explosion(100, 200, 10, 0x354696, this.earth.position.clone());\n            this.explosions.push(e);\n          }\n        }else{\n          if (Date.now() - this.destructionTimer < this.destructionDelay+4225)\n          {this.deathBeam.scale.setX (this.deathBeam.scale.x - 1);\n          this.deathBeam.position.x-= 0.5;}\n          else this.deathBeam.visible = false;\n        }\n        this.earth.rotation.y += 0.001;\n\n        if(this.onLevelInit) {\n          let levelInitEnd = true;\n          levelInitEnd = this.pad.animateReset();\n          for(let j= 0; j < this.alienGroup.getLength(); j++) {\n            if(this.alienGroup.get(j).mesh.position.z > 0) {\n              this.alienGroup.get(j).mesh.position.z -= 0.05;\n              levelInitEnd = false;\n            }\n            else {\n              this.alienGroup.get(j).mesh.position.z = 0.0;\n            }\n          }\n          for(let j= 0; j < this.blocks.length; j++) {\n            if(this.blocks[j].mesh.position.z > 0) {\n              this.blocks[j].mesh.position.z -= 0.05;\n              levelInitEnd = false;\n            }\n            else {\n              this.blocks[j].mesh.position.z = 0.0;\n            }\n          }\n          if(levelInitEnd) {\n            this.onLevelInit = false;\n          }\n        }\n        else {\n          let missilePadTouch = false;\n          \n          // animate pad\n          if(Key.getInstance().isDown(Key.keyCode.left)) {\n            this.pad.left();\n            Game.getInstance().updateCameraPad();\n          }\n          if(Key.getInstance().isDown(Key.keyCode.right)) {\n            this.pad.right();\n            Game.getInstance().updateCameraPad();\n          }\n          if(Key.getInstance().isDown(Key.keyCode.space)) this.padFire();\n          \n          // animate pad\n          this.pad.animate();\n          \n          // animate bunkers\n          for(let i= 0; i < this.blocks.length; i++) {\n             this.blocks[i].animate();\n          }\n          \n          // animate aliens\n          if(this.invincible == true) {\n            this.alienGroup.animate(false);\n          }\n          else {\n            this.alienGroup.animate(true);\n          }\n          \n          // alien fire\n          if((Date.now() - this.LastFire) > 1000){    \n            this.alienFire();\n            this.LastFire = Date.now();\n          }\n          \n          // alien bonus\n          for(let i= 0; i < this.alienBonus.length; i++) {\n             if(this.alienBonus[i].animate() == false) {\n              Game.getInstance().scene.remove(this.alienBonus[i].mesh);\n              Game.getInstance().scene.remove(this.alienBonus[i].mesh2);\n              this.alienBonus.splice(i, 1);\n             }\n          }\n          \n          // animate missiles\n          for(let i=0; i < this.missiles.length; i++) {\n             this.missiles[i].animate();\n          }\n          \n          // check missile overflow\n          for(let i= 0; i < this.missiles.length; i++) {\n             if(this.missiles[i].mesh.position.y > this.limitY || this.missiles[i].mesh.position.y < -3.0) {\n              // kill missile\n              Game.getInstance().scene.remove(this.missiles[i].mesh);\n              this.missiles.splice(i, 1);\n              i--;\n             }\n          }\n          \n          // animate explosions\n          for(let i= 0; i < this.explosions.length; i++) {\n             if(this.explosions[i].animate()) {\n              // explosion end\n              Game.getInstance().scene.remove(this.explosions[i].mesh);\n              this.explosions.splice(i, 1);\n              i--;\n              break;\n             }\n          }\n          \n          // animate scores\n          for(let i= 0; i < this.scores.length; i++) {\n             if(this.scores[i].animate()) {\n              // score end\n              Game.getInstance().scene.remove(this.scores[i].mesh);\n              this.scores.splice(i, 1);\n              i--;\n              break;\n             }\n          }\n          \n          // animate bonus\n          for(let i= 0; i < this.bonus.length; i++) {\n             if(this.bonus[i].animate()) {\n              // bonus end\n              Game.getInstance().scene.remove(this.bonus[i].mesh);\n              this.bonus.splice(i, 1);\n              i--;\n              break;\n             }\n          }\n          \n          // check missile collision with aliens\n          for(let i= 0; i < this.missiles.length; i++) {\n            for(let j= 0; j < this.alienGroup.getLength(); j++) {\n              if(!this.missiles[i].alien && this.alienGroup.get(j).collision(this.missiles[i])) {\n                missilePadTouch = true;\n                let alien = this.alienGroup.get(j);\n                //console.log('missile collision avec alien');\n                // explosion\n                SoundService.getSoundByName('alien-explosion').play();\n                e = new Explosion(1.5, 50, 0.4, alien.explosionColor, alien.mesh.position.clone());\n                this.explosions.push(e);\n                // score\n                Game.getInstance().updateScore(alien.getScore());\n                let s = new ScoreAnimation('+' + alien.getScore(), alien.mesh.position.clone());\n                this.scores.push(s);\n                // bonus\n                if(Math.random() < World.bonusRate) {\n                  let b = new Bonus(Math.floor((Math.random()*2)+1), new THREE.Vector3(alien.mesh.position.x, alien.mesh.position.y, alien.mesh.position.z));\n                  this.bonus.push(b);\n                }\n                // kill alien\n                this.removeAlien(j);\n                // kill missile\n                if(!this.missiles[i].isInvincible()) {\n                  this.removeMissile(i);\n                  i--;\n                  break;\n                }\n              }\n            }\n          }\n          for(let i= 0; i < this.missiles.length; i++) {\n            for(let j= 0; j < this.alienBonus.length; j++) {\n              if(!this.missiles[i].alien && this.alienBonus[j].collision(this.missiles[i])) {\n                missilePadTouch = true;\n                let alien = this.alienBonus[j];\n                // explosion\n                SoundService.getSoundByName('alien-explosion').play();\n                e = new Explosion(1.5, 50, 0.4, 0xff0000, alien.mesh.position.clone());\n                this.explosions.push(e);\n                // score\n                Game.getInstance().updateScore(alien.getScore());\n                let s = new ScoreAnimation('+' + alien.getScore(), alien.mesh.position.clone());\n                this.scores.push(s);\n                // kill alien\n                Game.getInstance().scene.remove(alien.mesh);\n                Game.getInstance().scene.remove(alien.mesh2);\n                this.alienBonus.splice(j, 1);\n                // kill missile\n                if(!this.missiles[i].isInvincible()) {\n                  this.removeMissile(i);\n                  i--;\n                  break;\n                }\n              }\n            }\n          }\n          \n          // check collision of alien's missile with pad\n          if(this.invincible == false) {\n            for(let i= 0; i < this.missiles.length; i++) {\n              if(this.missiles[i].collision(this.pad)) {\n                SoundService.getSoundByName('pad-explosion').play();\n                Game.getInstance().updateLife(Game.getInstance().life-1);\n                this.removeMissile(i);\n                this.killPad();\n                i--;\n                if(Game.getInstance().life <= 0) {\n                  this.pad.mesh.visible = false;\n                  setTimeout(function () {\n                    Game.getInstance().lose();\n                  }.bind(this), 500);\n                }\n              }\n            }\n          }\n          \n          // check if aliens have reach the player\n          if(this.alienGroup.onBottom() < 4.5) {\n            Game.getInstance().lose();\n          }\n\n          // check block collision\n          for(let i= 0; i < this.missiles.length; i++) {\n            for(let j= 0; j < this.blocks.length; j++) {\n              if(this.blocks[j].collision(this.missiles[i])) {\n                if(!this.missiles[i].alien) {\n                  missilePadTouch = true;\n                }\n                // explosion\n                SoundService.getSoundByName('block-explosion').play();\n                e = new Explosion(1.5, 30, 0.2, 0x22dd33, this.blocks[j].mesh.position.clone());\n                this.explosions.push(e);\n                // kill block\n                Game.getInstance().scene.remove(this.blocks[j].mesh);\n                this.blocks.splice(j, 1);\n                // kill missile\n                if(!this.missiles[i].isInvincible()) {\n                  this.removeMissile(i);\n                  i--;\n                  break;\n                }\n              }\n            }\n          }\n          \n          // check bonus collision\n          for(let i= 0; i < this.bonus.length; i++) {\n            if(this.bonus[i].collision(this.pad)) {\n              SoundService.getSoundByName('bonus').play();\n              // give bonus to pad\n              this.pad.addBonus(this.bonus[i]);\n              // explosion\n              e = new Explosion(1.5, 30, 0.2, 0x22dd33, this.pad.mesh.position.clone());\n              this.explosions.push(e);\n              // kill bonus\n              Game.getInstance().scene.remove(this.bonus[i].mesh);\n              this.bonus.splice(i, 1);\n            }\n          }\n          \n          // reset fire delay if a missile touch\n          if(missilePadTouch) {\n            this.pad.resetFireDelay();\n          }\n        }\n    }\n\n    public getLevel() {\n        return this.level;\n    }\n\n    public getAliensLengh() {\n        return this.alienGroup.getLength();\n    }\n}"]}