{"version":3,"sources":["menu.ts"],"names":[],"mappings":"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","file":"menu.js","sourcesContent":["class Menu {\n\n    static playMaterialOver = new THREE.MeshBasicMaterial({\n        color:0x2FA1D6,\n        side:THREE.DoubleSide\n    });\n    static playMaterialNotOver = new THREE.MeshBasicMaterial({\n        color:0xFF0000,\n        side:THREE.DoubleSide\n    });\n\n    x: number;\n    y: number;\n    z: number;\n    width: number;\n    height: number;\n    play: THREE.Mesh;\n    caster: THREE.Raycaster;\n    aliens: THREE.Mesh[];\n    scores: THREE.Mesh[];\n    game: Game;\n\n    constructor(params: any, game: Game) {\n        this.x = typeof params.x !== 'undefined' ? params.x : 0.0;\n        this.y = typeof params.y !== 'undefined' ? params.y : 0.0;\n        this.z = typeof params.z !== 'undefined' ? params.z : 0.0;\n        this.width = typeof params.width !== 'undefined' ? params.width : 10.0;\n        this.height = typeof params.height !== 'undefined' ? params.height : 10.0;\n        this.play = null;\n        this.caster = new THREE.Raycaster();\n        this.aliens = [];\n        this.scores = [];\n        this.game = game;\n\n        this.init();\n    }\n\n    private init() {\n        soundMenu.play();\n\n        this.play = new THREE.Mesh(new THREE.BoxGeometry(this.width/2, this.height/2, 1), Menu.playMaterialNotOver);\n        this.play.position.set(this.x, this.y+5, this.z);\n        this.game.scene.add(this.play);\n\n        var textPlay = textMesh({\n          text:'PLAY !',\n          color:'rgba(255,255,255,1)',\n          font:'Bold 50px Arial',\n          width: this.width/3,\n          height: this.height/3,\n        });\n        textPlay.position.set(this.x, this.y+7, this.z-1);\n        textPlay.rotation.x = Math.PI;\n        this.game.scene.add(textPlay);\n\n        var textTitle = textMesh({\n          text:'SPACE INVADERS',\n          color:'rgba(255,255,255,1)',\n          font:'Bold 35px Arial',\n          width: this.width*2,\n          height: this.height*2,\n        });\n        textTitle.position.set(this.x, this.y-10, this.z);\n        textTitle.rotation.x = Math.PI;\n        this.game.scene.add(textTitle);\n\n        this.aliens.push(alienData.type[2].modelMenu.clone());\n        this.aliens.push(alienData.type[1].modelMenu.clone());\n        this.aliens.push(alienData.type[0].modelMenu.clone());\n        this.aliens.push(alienData.type[3].modelMenu.clone());\n        for(var i=0; i<this.aliens.length; i++) {\n          this.aliens[i].position.set(-5 + (i*3), -9, 10.5);\n          this.aliens[i].rotation.x = Math.PI;\n          this.game.scene.add(this.aliens[i]);\n        };\n\n        this.scores.push(textMesh({\n          text:'+100',\n          color:'rgba(255,255,255,1)',\n          font:'Bold 50px Arial',\n          width: 3,\n          height: 1,\n        }));\n        this.scores.push(textMesh({\n          text:'+150',\n          color:'rgba(255,255,255,1)',\n          font:'Bold 50px Arial',\n          width: 3,\n          height: 1,\n        }));\n        this.scores.push(textMesh({\n          text:'+200',\n          color:'rgba(255,255,255,1)',\n          font:'Bold 50px Arial',\n          width: 3,\n          height: 1,\n        }));\n        this.scores.push(textMesh({\n          text:'+500',\n          color:'rgba(255,255,255,1)',\n          font:'Bold 50px Arial',\n          width: 3,\n          height: 1,\n        }));\n        for(var i=0; i<this.scores.length; i++) {\n          this.scores[i].position.set(-6 + (i*3.7), -9, 11.2);\n          this.scores[i].rotation.x = Math.PI+(Math.PI/2);\n          this.game.scene.add(this.scores[i]);\n        };\n\n        // set camera focus on menu\n        this.game.currentCamera = 0;\n        this.game.camera.rotation.x = Math.PI+Math.PI/3;\n    }\n\n    public mouseMove(event) {\n        var mouse = new THREE.Vector2();\n        mouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;\n        mouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;\n        this.caster.setFromCamera( mouse, this.game.camera );\n        var intersects = this.caster.intersectObject(this.play);\n            if(intersects.length > 0) {\n                this.play.material = Menu.playMaterialOver;\n          this.play.material.needsUpdate = true;\n            }\n            else {\n          this.play.material = Menu.playMaterialNotOver;\n          this.play.material.needsUpdate = true;\n        }\n    }\n\n    public mouseClick(event) {\n        var mouse = new THREE.Vector2();\n        mouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;\n        mouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;\n        this.caster.setFromCamera( mouse, this.game.camera );\n        var intersects = this.caster.intersectObject(this.play);\n        if(intersects.length > 0) {\n            this.game.newGame();\n        }\n    }\n}"]}