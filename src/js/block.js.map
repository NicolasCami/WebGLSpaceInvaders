{"version":3,"sources":["block.ts"],"names":[],"mappings":";;;;;;;IAGA;QAA2B,yBAAY;QAOnC,eAAY,QAA0D;YAA1D,wBAA0D,GAA1D,eAA8B,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;YAElE,kBAAM,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAC,KAAK,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,QAAQ,CAAC,CAAC;YAE5E,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,GAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,GAAG,KAAK,CAAC,YAAY,CAAC,EAAE,CAAC;YACzG,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;YAErB,IAAI,CAAC,IAAI,EAAE,CAAC;QAEhB,CAAC;QAEM,wBAAQ,GAAf;YACI,IAAI,IAAI,GAAG,aAAa,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC;YAClD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACrB,CAAC;QAEM,uBAAO,GAAd;YACI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAE3D,EAAE,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBACzC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;gBACtC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC;YAC7C,CAAC;YACD,IAAI,CAAC,EAAE,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBAC/C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;gBACvC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,YAAY,CAAC,EAAE,CAAC;YAC3C,CAAC;QACL,CAAC;QAjCM,kBAAY,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC;QAkC9C,YAAC;IAAD,CApCA,AAoCC,CApC0B,oCAAY,GAoCtC;IApCY,aAAK,QAoCjB,CAAA","file":"block.js","sourcesContent":["import { Game } from \"./game\";\nimport { Game3dObject } from \"./abstract.game3dobject\";\n\nexport class Block extends Game3dObject {\n\n    static orientations = { up: 1, down: -1 };\n\n    orientation: number;\n    moveLimit: number;\n\n    constructor(position: THREE.Vector3 = new THREE.Vector3(0.0, 0.0, 0.0)) {\n\n        super(new THREE.Vector3(0.001 + (Math.random()*0.005), 0.0, 0.0), position);\n        \n        this.orientation = (Math.floor((Math.random()*2)) > 0) ? Block.orientations.down : Block.orientations.up;\n        this.moveLimit = 0.2;\n\n        this.init();\n\n    }\n\n    public initMesh() {\n        let mesh = randFromArray(blockData.model).clone();\n        mesh.castShadow = true;\n        this.mesh = mesh;\n    }\n\n    public animate() {\n        this.mesh.position.z += this.orientation * this.velocity.x;\n\n        if(this.mesh.position.z > this.moveLimit) {\n          this.mesh.position.z = this.moveLimit;\n          this.orientation = Block.orientations.down;\n        }\n        else if(this.mesh.position.z < -this.moveLimit) {\n          this.mesh.position.z = -this.moveLimit;\n          this.orientation = Block.orientations.up;\n        }\n    }\n}\n"]}