{"version":3,"sources":["block.ts"],"names":[],"mappings":";;;;;AAAA;IAAoB,yBAAY;IAO5B,eAAY,IAAU,EACV,QAA0D;QAA1D,wBAA0D,GAA1D,eAA8B,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QAElE,kBAAM,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAC,KAAK,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,QAAQ,CAAC,CAAC;QAE9G,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,GAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,GAAG,KAAK,CAAC,YAAY,CAAC,EAAE,CAAC;QACzG,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;QAErB,IAAI,CAAC,IAAI,EAAE,CAAC;IAEhB,CAAC;IAEM,wBAAQ,GAAf;QACI,IAAI,IAAI,GAAG,aAAa,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC;QAClD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IAEM,uBAAO,GAAd;QACI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;QAE3D,EAAE,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;YACtC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC;QAC7C,CAAC;QACD,IAAI,CAAC,EAAE,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YAC/C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;YACvC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,YAAY,CAAC,EAAE,CAAC;QAC3C,CAAC;IACL,CAAC;IAlCM,kBAAY,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC;IAmC9C,YAAC;AAAD,CArCA,AAqCC,CArCmB,YAAY,GAqC/B","file":"block.js","sourcesContent":["class Block extends Game3dObject {\n\n    static orientations = { up: 1, down: -1 };\n\n    orientation: number;\n    moveLimit: number;\n\n    constructor(game: Game,\n                position: THREE.Vector3 = new THREE.Vector3(0.0, 0.0, 0.0)) {\n\n        super(new THREE.Vector3(0.6, 0.6, 1.0), new THREE.Vector3(0.001 + (Math.random()*0.005), 0.0, 0.0), position);\n        \n        this.orientation = (Math.floor((Math.random()*2)) > 0) ? Block.orientations.down : Block.orientations.up;\n        this.moveLimit = 0.2;\n\n        this.init();\n\n    }\n\n    public initMesh() {\n        let mesh = randFromArray(blockData.model).clone();\n        mesh.castShadow = true;\n        this.mesh = mesh;\n    }\n\n    public animate() {\n        this.mesh.position.z += this.orientation * this.velocity.x;\n\n        if(this.mesh.position.z > this.moveLimit) {\n          this.mesh.position.z = this.moveLimit;\n          this.orientation = Block.orientations.down;\n        }\n        else if(this.mesh.position.z < -this.moveLimit) {\n          this.mesh.position.z = -this.moveLimit;\n          this.orientation = Block.orientations.up;\n        }\n    }\n}\n"]}