{"version":3,"sources":["explosion.ts"],"names":[],"mappings":"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","file":"explosion.js","sourcesContent":["import { Game3dObject } from \"./abstract.game3dobject\";\n\nexport class Explosion extends Game3dObject {\n\n    static LIFE_TIME = 1000.0;\n\n    particleCloudSize: number;\n    particleNb: number;\n    particleSize: number;\n    particleColor: number;\n    particles: THREE.Geometry;\n    particlesVelocity: THREE.Vector3[];\n    time: number;\n\n    constructor(particleCloudSize: number = 1.0,\n                particleNb : number = 10,\n                particleSize : number = 0.1,\n                particleColor : number = 0xff0000,\n                position: THREE.Vector3 = new THREE.Vector3(0.0, 0.0, 0.0)) {\n\n        super(new THREE.Vector3(0.0, 0.0, 0.0), position);\n        \n        this.particleCloudSize = particleCloudSize;\n        this.particleNb = particleNb;\n        this.particleSize = particleSize;\n        this.particleColor = particleColor;\n        this.particlesVelocity = [];\n\n        this.init();\n\n    }\n\n    public initMesh() {\n        this.particles = new THREE.Geometry;\n        for (var p = 0; p < this.particleNb; p++) {\n            var particle = new THREE.Vector3(Math.random() * this.particleCloudSize - (this.particleCloudSize/2.0), Math.random() * this.particleCloudSize - (this.particleCloudSize/2.0), Math.random() * this.particleCloudSize - (this.particleCloudSize/2.0));\n            this.particles.vertices.push(particle);\n            this.particlesVelocity.push(new THREE.Vector3(Math.random()*1-0.5, Math.random()*1-0.5, Math.random()*1-0.5));\n        }\n        var particleMaterial = new THREE.PointCloudMaterial({ color: this.particleColor, size: this.particleSize });\n        this.mesh = new THREE.PointCloud(this.particles, particleMaterial);\n    }\n\n    public animate() : boolean {\n        let geometry = <THREE.Geometry> this.mesh.geometry;\n        for(var i= 0; i < geometry.vertices.length; i++) {\n            var particle = geometry.vertices[i];\n            particle.add(this.particlesVelocity[i]);\n        }\n        geometry.verticesNeedUpdate = true;\n        \n        if(this.time + Explosion.LIFE_TIME < Date.now()) {\n            return true;\n        }\n        return false;\n    }\n}\n"]}