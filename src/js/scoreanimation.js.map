{"version":3,"sources":["scoreanimation.ts"],"names":[],"mappings":";;;;;;;IAEA;QAAoC,kCAAY;QAU5C,wBAAY,IAAiB,EACjB,QAA0D,EAC1D,KAAiB;YAFjB,oBAAiB,GAAjB,SAAiB;YACjB,wBAA0D,GAA1D,eAA8B,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;YAC1D,qBAAiB,GAAjB,SAAiB;YAEzB,kBAAM,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,cAAc,CAAC,SAAS,CAAC,EAAE,QAAQ,CAAC,CAAC;YAEvE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YAEnB,IAAI,CAAC,IAAI,EAAE,CAAC;QAEhB,CAAC;QAEM,iCAAQ,GAAf;YACI,EAAE,CAAA,CAAC,IAAI,CAAC,IAAI,IAAI,QAAQ,CAAC,CAAC,CAAC;gBACvB,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;YAC5C,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC;oBAC3B,IAAI,EAAC,IAAI,CAAC,IAAI;oBACd,KAAK,EAAC,qBAAqB;oBAC3B,IAAI,EAAC,iBAAiB;oBACtB,KAAK,EAAE,IAAI,CAAC,KAAK;oBACjB,MAAM,EAAE,CAAC;iBACZ,CAAC,CAAC;gBACH,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;YAC5C,CAAC;YAED,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QACvC,CAAC;QAEM,gCAAO,GAAd;YACI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACtC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,GAAG,CAAC;YAE5B,EAAE,CAAA,CAAC,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACnD,MAAM,CAAC,IAAI,CAAC;YAChB,CAAC;YACD,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QAEM,qCAAY,GAAnB;YACI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACzB,CAAC;QApDM,wBAAS,GAAG,IAAI,CAAC;QACjB,wBAAS,GAAG,MAAM,CAAC;QAoD9B,qBAAC;IAAD,CAvDA,AAuDC,CAvDmC,oCAAY,GAuD/C;IAvDY,sBAAc,iBAuD1B,CAAA","file":"scoreanimation.js","sourcesContent":["import { Game3dObject } from \"./abstract.game3dobject\";\n\nexport class ScoreAnimation extends Game3dObject {\n\n    static INCREMENT = 0.05;\n    static LIFE_TIME = 2000.0;\n\n    time: number;\n    text: string;\n    width: number;\n    mesh: THREE.Mesh;\n\n    constructor(text: string = '',\n                position: THREE.Vector3 = new THREE.Vector3(0.0, 0.0, 0.0),\n                width: number = 5) {\n\n        super(new THREE.Vector3(0.0, 0.0, ScoreAnimation.INCREMENT), position);\n        \n        this.time = Date.now();\n        this.text = text;\n        this.width = width;\n\n        this.init();\n\n    }\n\n    public initMesh() {\n        if(this.text in textData) {\n            this.mesh = textData[this.text].clone();\n        }\n        else {\n            textData[this.text] = textMesh({\n                text:this.text,\n                color:'rgba(255,255,255,1)',\n                font:'Bold 50px Arial',\n                width: this.width,\n                height: 3,\n            });\n            this.mesh = textData[this.text].clone();\n        }\n\n        this.mesh.rotation.x = Math.PI / 2;\n    }\n\n    public animate() : boolean {\n        this.mesh.position.add(this.velocity);\n        this.mesh.rotation.z += 0.1;\n        \n        if(this.time + ScoreAnimation.LIFE_TIME < Date.now()) {\n            return true;\n        }\n        return false;\n    }\n\n    public getDirection() : THREE.Vector3 {\n        return this.velocity;\n    }\n}\n"]}