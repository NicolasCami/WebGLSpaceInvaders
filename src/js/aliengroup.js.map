{"version":3,"sources":["aliengroup.ts"],"names":[],"mappings":"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","file":"aliengroup.js","sourcesContent":["import { Game } from \"./game\";\nimport { SoundService } from \"./soundservice\";\nimport { Alien } from \"./alien\";\nimport { Missile } from \"./missile\";\n\nexport class AlienGroup {\n\n    static direction = { right: 1, left: -1 };\n    static positionBounds = { min: -11, max: 11 };\n\n    aliens: Alien[];\n    aliensBottom: number[];\n    gettingDown: number;\n    currentDirection: number;\n\n    constructor() {\n        this.aliens = [];\n        this.aliensBottom = [];\n        this.gettingDown = 0;\n        this.currentDirection = AlienGroup.direction.right;\n    }\n  \n    public addAlien(alien: Alien) : number {\n        this.aliens.push(alien);\n        return this.aliens.length-1;\n    }\n\n    /**\n     * Return the position of the alien at the right side of the group.\n     * @return {number} The maximum right position.\n     */\n    public onRight() : number {\n        let max = -999;\n        for(let i =0; i < this.aliens.length; i++) {\n            if (this.aliens[i].getX() > max) {\n                max=this.aliens[i].getX();\n            }\n        }\n        return max;\n    }\n\n    /**\n     * Return the position of the alien at the left side of the group.\n     * @return {number} The maximum left position.\n     */\n    public onLeft() : number {\n        let min = 999;\n        for(let i =0; i < this.aliens.length; i++) {\n            if (this.aliens[i].getX() < min) {\n                min=this.aliens[i].getX();\n            }\n        }\n        return min;\n    }\n\n    /**\n     * Return the position of the alien at the bottom side of the group.\n     * @return {number} The maximum bottom position.\n     */\n    public onBottom() : number {\n        let min = 999;\n        for(let i =0; i < this.aliens.length; i++) {\n            if (this.aliens[i].getY() < min) {\n                min=this.aliens[i].getY();\n            }\n        }\n        return min;\n    }\n\n    /**\n     * Choose a random alien to fire.\n     * Return the index of the chosen one.\n     * @return {number} Index of an random alien which can fire.\n     */\n    public chooseFiringAlien(): number {\n        let x = this.aliensBottom[0];\n        if(Game.getInstance().world.getLevel() < 2) {\n            x = randFromArray(this.aliensBottom);\n        }\n        else {\n            for(let i=1; i < this.aliensBottom.length; i++) {\n                if(Math.abs(this.aliens[this.aliensBottom[i]].getX() - Game.getInstance().world.pad.getX()) < Math.abs(this.aliens[x].getX() - Game.getInstance().world.pad.getX())) {\n                    x = this.aliensBottom[i];\n                }\n            }\n        }\n        return x;\n    }\n\n    public init(lines: number, rows: number, level: number) {\n        let type: number;\n        for(let i = 0; i < lines; i++) {\n            for(let j = 0; j < rows; j++) {\n                if (i == 0) {\n                    type = Alien.type.bottom;\n                }\n                else if (i < 3) {\n                    type = Alien.type.middle;\n                }\n                else {\n                    type = Alien.type.top;\n                }\n\n                this.addAlien(new Alien(type, new THREE.Vector3(0.05 + (0.01*level), 0.0, 0.0), new THREE.Vector3(-5 + j*2, 20.0 - i*2, 0.0), -0.1 - (level*0.02)));\n            }\n        }\n        this.computeAliensBottom();\n    }\n\n    public computeAliensBottom() {\n        this.aliensBottom = [];\n        for(let j=0; j < this.aliens.length; j++) {\n            let add = true;\n            for(let k=j+1; k < this.aliens.length; k++) {\n                if(this.aliens[k].mesh.position.x == this.aliens[j].mesh.position.x &&\n                    this.aliens[k].mesh.position.y < this.aliens[j].mesh.position.y) {\n                    add = false;\n                    break;\n                }\n            }\n\n            if(add) {\n                this.aliensBottom.push(j);\n            }\n        }\n    }\n\n    public remove(i: number) {\n        this.aliens.splice(i, 1);\n        this.computeAliensBottom();\n    }\n\n    public getLength(): number {\n        return this.aliens.length;\n    }\n\n    public get(i: number): Alien {\n        return this.aliens[i];\n    }\n\n    public fire(): boolean | Missile {\n        let firingAlien: number;\n        let m: Missile | boolean;\n\n        if(this.getLength()) {\n            firingAlien = this.chooseFiringAlien();\n            m = this.aliens[firingAlien].fire();\n            if(m) {\n                SoundService.getSoundByName('alien-fire').play();\n                return m;\n            }\n        }\n        \n        return false;\n    }\n\n    /**\n     * Animate all aliens.\n     * Make them to change change direction and to fall if needed.\n     * @param {boolean = true} canFall If false, aliens won't fall, they will only moving from left to right and right to left.\n     */\n    public animate(canFall: boolean = true) {\n        if(this.gettingDown <= 0) {         \n            if(this.onLeft() < AlienGroup.positionBounds.min + 1.5) {\n                this.currentDirection = AlienGroup.direction.right;\n                this.animateAliens();\n                if(canFall) {\n                    this.gettingDown = 8;\n                }\n            }\n            if(this.onRight() > AlienGroup.positionBounds.max - 1.5) {\n                this.currentDirection = AlienGroup.direction.left;\n                this.animateAliens();\n                if(canFall) {\n                    this.gettingDown = 8;\n                }\n            }\n        }\n        else {\n            this.gettingDown -= 1;\n        }\n\n        this.animateAliens();\n    }\n\n    public animateAliens() {\n        for(let i=0; i < this.aliens.length; i++) {\n            this.aliens[i].animate(this.currentDirection, this.gettingDown);\n        }\n    }\n}"]}