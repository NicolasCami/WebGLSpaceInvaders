{"version":3,"sources":["aliengroup.ts"],"names":[],"mappings":"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","file":"aliengroup.js","sourcesContent":["class AlienGroup {\n\n    static direction = { right: 1, left: -1 };\n    static positionBounds = { min: -11, max: 11 };\n\n    aliens: Alien[];\n    aliensBottom: number[];\n    gettingDown: number;\n    currentDirection: number;\n    game: Game;\n\n    constructor(game: Game) {\n        this.aliens = [];\n        this.aliensBottom = [];\n        this.game = game;\n        this.gettingDown = 0;\n        this.currentDirection = AlienGroup.direction.right;\n    }\n  \n    public addAlien(alien: Alien) : number {\n        this.aliens.push(alien);\n        return this.aliens.length-1;\n    }\n\n    /**\n     * Return the position of the alien at the right side of the group.\n     * @return {number} The maximum right position.\n     */\n    public onRight() : number {\n        let max = -999;\n        for(let i =0; i < this.aliens.length; i++) {\n            if (this.aliens[i].getX() > max) {\n                max=this.aliens[i].getX();\n            }\n        }\n        return max;\n    }\n\n    /**\n     * Return the position of the alien at the left side of the group.\n     * @return {number} The maximum left position.\n     */\n    public onLeft() : number {\n        let min = 999;\n        for(let i =0; i < this.aliens.length; i++) {\n            if (this.aliens[i].getX() < min) {\n                min=this.aliens[i].getX();\n            }\n        }\n        return min;\n    }\n\n    /**\n     * Return the position of the alien at the bottom side of the group.\n     * @return {number} The maximum bottom position.\n     */\n    public onBottom() : number {\n        let min = 999;\n        for(let i =0; i < this.aliens.length; i++) {\n            if (this.aliens[i].getY() < min) {\n                min=this.aliens[i].getY();\n            }\n        }\n        return min;\n    }\n\n    /**\n     * Choose a random alien to fire.\n     * Return the index of the chosen one.\n     * @return {number} Index of an random alien which can fire.\n     */\n    public chooseFiringAlien(): number {\n        let x = this.aliensBottom[0];\n        if(this.game.world.getLevel() < 2) {\n            x = randFromArray(this.aliensBottom);\n        }\n        else {\n            for(let i=1; i < this.aliensBottom.length; i++) {\n                if(Math.abs(this.aliens[this.aliensBottom[i]].getX() - this.game.world.pad.getX()) < Math.abs(this.aliens[x].getX() - this.game.world.pad.getX())) {\n                    x = this.aliensBottom[i];\n                }\n            }\n        }\n        return x;\n    }\n\n    public init(lines: number, rows: number, level: number) {\n        let type: number;\n        for(let i = 0; i < lines; i++) {\n            for(let j = 0; j < rows; j++) {\n                if (i == 0) {\n                    type = Alien.type.bottom;\n                }\n                else if (i < 3) {\n                    type = Alien.type.middle;\n                }\n                else {\n                    type = Alien.type.top;\n                }\n\n                this.addAlien(new Alien(this.game, type, new THREE.Vector3(0.05 + (0.01*level), 0.0, 0.0), new THREE.Vector3(-5 + j*2, 20.0 - i*2, 0.0), -0.1 - (level*0.02)));\n            }\n        }\n        this.computeAliensBottom();\n    }\n\n    public computeAliensBottom() {\n        this.aliensBottom = [];\n        for(let j=0; j < this.aliens.length; j++) {\n            let add = true;\n            for(let k=j+1; k < this.aliens.length; k++) {\n                if(this.aliens[k].mesh.position.x == this.aliens[j].mesh.position.x &&\n                    this.aliens[k].mesh.position.y < this.aliens[j].mesh.position.y) {\n                    add = false;\n                    break;\n                }\n            }\n\n            if(add) {\n                this.aliensBottom.push(j);\n            }\n        }\n    }\n\n    public remove(i: number) {\n        this.aliens.splice(i, 1);\n        this.computeAliensBottom();\n    }\n\n    public getLength(): number {\n        return this.aliens.length;\n    }\n\n    public get(i: number): Alien {\n        return this.aliens[i];\n    }\n\n    public fire(): boolean | Missile {\n        let firingAlien: number;\n        let m: Missile | boolean;\n\n        if(this.getLength()) {\n            firingAlien = this.chooseFiringAlien();\n            m = this.aliens[firingAlien].fire();\n            if(m) {\n                soundAlienFire.play();\n                return m;\n            }\n        }\n        \n        return false;\n    }\n\n    /**\n     * Animate all aliens.\n     * Make them to change change direction and to fall if needed.\n     * @param {boolean = true} canFall If false, aliens won't fall, they will only moving from left to right and right to left.\n     */\n    public animate(canFall: boolean = true) {\n        if(this.gettingDown <= 0) {         \n            if(this.onLeft() < AlienGroup.positionBounds.min + 1.5) {\n                this.currentDirection = AlienGroup.direction.right;\n                this.animateAliens();\n                if(canFall) {\n                    this.gettingDown = 8;\n                }\n            }\n            if(this.onRight() > AlienGroup.positionBounds.max - 1.5) {\n                this.currentDirection = AlienGroup.direction.left;\n                this.animateAliens();\n                if(canFall) {\n                    this.gettingDown = 8;\n                }\n            }\n        }\n        else {\n            this.gettingDown -= 1;\n        }\n\n        this.animateAliens();\n    }\n\n    public animateAliens() {\n        for(let i=0; i < this.aliens.length; i++) {\n            this.aliens[i].animate(this.currentDirection, this.gettingDown);\n        }\n    }\n}"]}