{"version":3,"sources":["abstract.game3dobject.ts"],"names":[],"mappings":"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","file":"abstract.game3dobject.js","sourcesContent":["abstract class Game3dObject {\n\n    static increment = 0.05;\n\n    size: THREE.Vector3;\n    velocity: THREE.Vector3;\n    initialPosition: THREE.Vector3;\n    mesh: THREE.Mesh | THREE.PointCloud;\n    bb: THREE.Box3;\n\n    constructor(velocity: THREE.Vector3 = new THREE.Vector3(0.0, 0.0, 0.0),\n                position: THREE.Vector3 = new THREE.Vector3(0.0, 0.0, 0.0)) {\n\n        this.velocity = velocity;\n        this.initialPosition = position;\n\n    }\n\n    protected init() {\n        this.initMesh();\n\n        if(this.mesh) {\n            this.mesh.position.copy(this.initialPosition);\n            this.bb = new THREE.Box3().setFromObject(this.mesh);\n            this.size = (this.bb.size()) ? this.bb.size() : new THREE.Vector3(0,0,0);\n        }\n\n        Game.getInstance().scene.add(this.mesh);\n    }\n\n    abstract initMesh();\n\n    public animate() {\n        this.mesh.position.add(this.velocity);\n    }\n\n    public getX() : number {\n        return this.mesh.position.x;\n    }\n\n    public getY() : number {\n      return this.mesh.position.y;\n    }\n\n    public getSize() : THREE.Vector3 {\n      return this.size;\n    }\n\n    public minX() : number {\n      return this.mesh.position.x-(this.size.x/2);\n    }\n\n    public minY() : number {\n      return this.mesh.position.y-(this.size.y/2);\n    }\n\n    public minZ() : number {\n      return this.mesh.position.z-(this.size.z/2);\n    }\n\n    public maxX() : number {\n      return this.mesh.position.x+(this.size.x/2);\n    }\n\n    public maxY() : number {\n      return this.mesh.position.y+(this.size.y/2);\n    }\n\n    public maxZ() : number {\n      return this.mesh.position.z+(this.size.z/2);\n    }\n\n    public collision(obj: Game3dObject) : boolean {\n        let result : boolean = false;\n        result = (obj.maxX() >= this.minX() && obj.minX() <= this.maxX())\n                 && (obj.maxY() >= this.minY() && obj.minY() <= this.maxY())\n                 && (obj.maxZ() >= this.minZ() && obj.minZ() <= this.maxZ());\n\n        if(this.bb && obj.bb) {\n            // console.log(this.bb.size(),'/',this.size);\n            // result = this.bb.intersect(obj.bb);\n        }\n\n        return result;\n    }\n\n}"]}