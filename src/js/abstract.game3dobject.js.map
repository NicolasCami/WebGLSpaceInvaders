{"version":3,"sources":["abstract.game3dobject.ts"],"names":[],"mappings":"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","file":"abstract.game3dobject.js","sourcesContent":["import { Game } from \"./game\";\n\nexport abstract class Game3dObject {\n\n    static increment = 0.05;\n\n    size: THREE.Vector3;\n    velocity: THREE.Vector3;\n    initialPosition: THREE.Vector3;\n    mesh: THREE.Mesh | THREE.PointCloud;\n    bb: THREE.Box3;\n\n    constructor(velocity: THREE.Vector3 = new THREE.Vector3(0.0, 0.0, 0.0),\n                position: THREE.Vector3 = new THREE.Vector3(0.0, 0.0, 0.0)) {\n\n        this.velocity = velocity;\n        this.initialPosition = position;\n\n    }\n\n    protected init() {\n        this.initMesh();\n\n        if(this.mesh) {\n            this.mesh.position.copy(this.initialPosition);\n            this.bb = new THREE.Box3().setFromObject(this.mesh);\n            this.size = (this.bb.size()) ? this.bb.size() : new THREE.Vector3(0,0,0);\n        }\n\n        Game.getInstance().scene.add(this.mesh);\n    }\n\n    abstract initMesh();\n\n    public animate() {\n        this.mesh.position.add(this.velocity);\n    }\n\n    public getX() : number {\n        return this.mesh.position.x;\n    }\n\n    public getY() : number {\n      return this.mesh.position.y;\n    }\n\n    public getSize() : THREE.Vector3 {\n      return this.size;\n    }\n\n    public minX() : number {\n      return this.mesh.position.x-(this.size.x/2);\n    }\n\n    public minY() : number {\n      return this.mesh.position.y-(this.size.y/2);\n    }\n\n    public minZ() : number {\n      return this.mesh.position.z-(this.size.z/2);\n    }\n\n    public maxX() : number {\n      return this.mesh.position.x+(this.size.x/2);\n    }\n\n    public maxY() : number {\n      return this.mesh.position.y+(this.size.y/2);\n    }\n\n    public maxZ() : number {\n      return this.mesh.position.z+(this.size.z/2);\n    }\n\n    public collision(obj: Game3dObject) : boolean {\n        let result : boolean = false;\n\n        result = (obj.maxX() >= this.minX() && obj.minX() <= this.maxX())\n                 && (obj.maxY() >= this.minY() && obj.minY() <= this.maxY())\n                 && (obj.maxZ() >= this.minZ() && obj.minZ() <= this.maxZ());\n\n        return result;\n    }\n\n}"]}